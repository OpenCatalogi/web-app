{"version":3,"file":"component---src-pages-applications-application-id-applications-detail-page-tsx-301d35d53eff066d1d3c.js","mappings":"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","sources":["webpack://skeleton-pip/./src/hooks/applications.ts","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.module.css","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.tsx","webpack://skeleton-pip/./src/pages/applications/[applicationId]/ApplicationsDetailPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFiltersContext } from \"../context/filters\";\n\nexport const useApplications = (queryClient: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getAll = (filters: IFiltersContext, currentPage: number, limit: number) =>\n    useQuery<any, Error>(\n      [\"applications\", filters, currentPage, limit],\n      () => API?.Applications.getAll(currentPage, limit),\n      {\n        onError: (error) => {\n          throw new Error(error.message);\n        },\n      },\n    );\n\n  const getOne = (applicationId: string) =>\n    useQuery<any, Error>([\"applications\", applicationId], () => API?.Applications.getOne(applicationId), {\n      initialData: () =>\n        queryClient.getQueryData<any[]>(\"applications\")?.find((_application) => _application.id === applicationId),\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      enabled: !!applicationId,\n    });\n\n  return { getOne, getAll };\n};\n","// extracted by mini-css-extract-plugin\nexport var backButton = \"ApplicationsDetailTemplate-module--backButton--5f643\";\nexport var buttonIcon = \"ApplicationsDetailTemplate-module--buttonIcon--3b584\";\nexport var components = \"ApplicationsDetailTemplate-module--components--eb9d2\";\nexport var container = \"ApplicationsDetailTemplate-module--container--e6fce\";\nexport var dependenciesDisplaySwitchButtons = \"ApplicationsDetailTemplate-module--dependenciesDisplaySwitchButtons--8b90b\";\nexport var description = \"ApplicationsDetailTemplate-module--description--31b70\";\nexport var header = \"ApplicationsDetailTemplate-module--header--bd1fa\";\nexport var layerAndCategoryContainer = \"ApplicationsDetailTemplate-module--layerAndCategoryContainer--f8e7d\";\nexport var noComponentsFound = \"ApplicationsDetailTemplate-module--noComponentsFound--23e6a\";\nexport var screenshot = \"ApplicationsDetailTemplate-module--screenshot--c7466\";\nexport var screenshotContainer = \"ApplicationsDetailTemplate-module--screenshotContainer--da970\";\nexport var title = \"ApplicationsDetailTemplate-module--title--8914e\";","import * as React from \"react\";\nimport * as styles from \"./ApplicationsDetailTemplate.module.css\";\nimport { Container } from \"@conduction/components\";\nimport {\n  Heading,\n  Icon,\n  Button,\n  ButtonGroup,\n  DataBadge,\n  Separator,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { faArrowLeft, faCircleNodes, faHouse, faLaptopCode, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { QueryClient } from \"react-query\";\nimport { useApplications } from \"../../hooks/applications\";\nimport { DependenciesTemplate } from \"../templateParts/dependenciesTemplates/ComponentDependenciesTemplate\";\nimport { ExpandableLeadParagraph } from \"../../components/expandableLeadParagraph/ExpandableLeadParagraph\";\nimport { TOOLTIP_ID } from \"../../layout/Layout\";\nimport { navigate } from \"gatsby-link\";\n\ninterface ApplicationsDetailTemplateProps {\n  applicationId: string;\n}\n\nexport const ApplicationsDetailTemplate: React.FC<ApplicationsDetailTemplateProps> = ({ applicationId }) => {\n  const { t } = useTranslation();\n  const [layerType, setlayerType] = React.useState<\"layer\" | \"relations\">(\"layer\");\n\n  const queryClient = new QueryClient();\n  const _useApplications = useApplications(queryClient);\n  const getApplications = _useApplications.getOne(applicationId);\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <Link\n        className={styles.backButton}\n        onClick={(e) => {\n          e.preventDefault(), navigate(\"/applications\");\n        }}\n        href=\"/applications\"\n      >\n        <Icon>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Icon>\n        {t(\"Back to applications\")}\n      </Link>\n\n      {getApplications.isSuccess && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.description}>\n              <Heading level={1} className={styles.title}>\n                {getApplications.data.name}\n              </Heading>\n\n              <ExpandableLeadParagraph\n                description={getApplications.data.description ?? t(\"There is no description available\")}\n              />\n\n              <div className={styles.layerAndCategoryContainer}>\n                {getApplications.data.embedded?.owner && (\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Organisatie\">\n                    <FontAwesomeIcon icon={faHouse} />\n                    {getApplications.data.embedded?.owner.fullName}\n                  </DataBadge>\n                )}\n\n                {getApplications.data.demoUrl && (\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Demo\"\n                    onClick={() => open(getApplications.data.demoUrl)}\n                  >\n                    <FontAwesomeIcon icon={faLaptopCode} />\n                    {t(\"Demo\")}\n                  </DataBadge>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Separator />\n\n          <div>\n            <Heading level={2} className={styles.title}>\n              Screenshot\n            </Heading>\n            <div className={styles.screenshotContainer}>\n              <img src={getApplications.data.detailPageImageUrl} className={styles.screenshot} />\n            </div>\n          </div>\n\n          <Separator />\n\n          {getApplications.data?.embedded?.components && (\n            <div className={styles.components}>\n              <ButtonGroup className={styles.dependenciesDisplaySwitchButtons}>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"layer\"}\n                  appearance={layerType === \"layer\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"layer\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faLayerGroup} />\n                  </Icon>{\" \"}\n                  {t(\"Layers\")}\n                </Button>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"relations\"}\n                  appearance={layerType === \"relations\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"relations\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faCircleNodes} />\n                  </Icon>{\" \"}\n                  {t(\"Relations\")}\n                </Button>\n              </ButtonGroup>\n\n              <DependenciesTemplate\n                type={layerType}\n                components={getApplications.data?.embedded?.components ?? []}\n                mainComponent={{\n                  id: getApplications.data.id,\n                  name: getApplications.data.name,\n                  layer: getApplications.data.embedded?.nl?.embedded?.commonground.layerType || null,\n                }}\n              />\n            </div>\n          )}\n\n          {!getApplications.data?.embedded?.components && (\n            <span className={styles.noComponentsFound}>Deze applicatie heeft (nog) geen gekoppelde componenten.</span>\n          )}\n        </>\n      )}\n\n      {getApplications.isLoading && <Skeleton height=\"200px\" />}\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport { ApplicationsDetailTemplate } from \"../../../templates/applicationsDetailTemplate/ApplicationsDetailTemplate\";\n\nconst ApplicationsDetailPage: React.FC<PageProps> = (props: PageProps) => {\n  return <ApplicationsDetailTemplate applicationId={props.params.applicationId} />;\n};\nexport default ApplicationsDetailPage;\n"],"names":["useApplications","queryClient","API","React","APIContext","getOne","applicationId","useQuery","Applications","initialData","_queryClient$getQuery","getQueryData","find","_application","id","onError","error","Error","message","enabled","getAll","filters","currentPage","limit","buttonIcon","title","ApplicationsDetailTemplate","_ref","_getApplications$data","_getApplications$data2","_getApplications$data3","_getApplications$data4","_getApplications$data5","_getApplications$data6","_getApplications$data7","_getApplications$data8","_getApplications$data9","_getApplications$data10","_getApplications$data11","_getApplications$data12","_getApplications$data13","t","useTranslation","layerType","setlayerType","QueryClient","getApplications","_jsxs","Container","layoutClassName","children","Link","className","onClick","e","preventDefault","navigate","href","_jsx","Icon","FontAwesomeIcon","icon","faArrowLeft","isSuccess","_Fragment","Heading","level","styles","data","name","ExpandableLeadParagraph","description","embedded","owner","DataBadge","TOOLTIP_ID","faHouse","fullName","demoUrl","open","faLaptopCode","Separator","src","detailPageImageUrl","components","ButtonGroup","Button","pressed","appearance","faLayerGroup","faCircleNodes","DependenciesTemplate","type","mainComponent","layer","nl","commonground","isLoading","Skeleton","height","props","params"],"sourceRoot":""}