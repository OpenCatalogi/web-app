{"version":3,"file":"02eda3c0b83155c35c8a38b691a3f2d72366f136-8bdf8a941a1683608b6d.js","mappings":"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","sources":["webpack://skeleton-pip/./src/components/expandableLeadParagraph/ExpandableLeadParagraph.tsx","webpack://skeleton-pip/./src/components/expandableLeadParagraph/ExpandableLeadParagraph.module.css","webpack://skeleton-pip/./src/hooks/applications.ts","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.module.css","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.tsx","webpack://skeleton-pip/./src/pages/applications/[applicationId]/ApplicationsDetailPage.tsx","webpack://skeleton-pip/./src/templates/templateParts/dependenciesTemplates/relationsDependenciesTemplate/RelationsDependenciesTemplate.module.css","webpack://skeleton-pip/./src/services/addNewLineToString.ts","webpack://skeleton-pip/./src/templates/templateParts/dependenciesTemplates/relationsDependenciesTemplate/RelationsDependenciesTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/dependenciesTemplates/layerDependenciesTemplate/LayerDependenciesTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/dependenciesTemplates/ComponentDependenciesTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/layerAccordion/filters/LayerAccordionFiltersTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/layerAccordion/filters/LayerAccordionFiltersTemplate.tsx"],"sourcesContent":["import * as React from \"react\";\nimport * as styles from \"./ExpandableLeadParagraph.module.css\";\nimport { Button, Paragraph } from \"@utrecht/component-library-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\n\nconst SHORT_DESCRIPTION_TRESHOLD = 300;\n\ninterface ExpandableLeadParagraphProps {\n  description: string;\n}\n\nexport const ExpandableLeadParagraph: React.FC<ExpandableLeadParagraphProps> = ({ description }) => {\n  const [isExpanded, setIsExpanded] = React.useState<boolean>(false);\n  const [shortDescription, setShortDescription] = React.useState<string>(\"\");\n  const [descriptionIsExpandable, setDescriptionIsExpandable] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    setDescriptionIsExpandable(description.length > SHORT_DESCRIPTION_TRESHOLD);\n  }, [description]);\n\n  React.useEffect(() => {\n    if (!descriptionIsExpandable) return;\n\n    setShortDescription(`${description.substring(0, SHORT_DESCRIPTION_TRESHOLD)}...`);\n  }, [descriptionIsExpandable]);\n\n  if (!descriptionIsExpandable) return <Paragraph lead>{description}</Paragraph>; // Show desciption as-is without any changes\n\n  return (\n    <div className={styles.container}>\n      <Paragraph lead>{isExpanded ? description : shortDescription}</Paragraph>\n\n      <Button\n        appearance=\"secondary-action-button\"\n        className={clsx(styles.toggleButton, isExpanded && styles.isExpanded)}\n        onClick={() => setIsExpanded((isExpanded) => !isExpanded)}\n      >\n        {isExpanded ? \"Omschrijving inklappen\" : \"Volledige omschrijving lezen\"}\n\n        <FontAwesomeIcon className=\"utrecht-icon--conduction-end\" icon={faChevronRight} />\n      </Button>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var container = \"ExpandableLeadParagraph-module--container--ac0d9\";\nexport var isExpanded = \"ExpandableLeadParagraph-module--isExpanded--b17f6\";\nexport var toggleButton = \"ExpandableLeadParagraph-module--toggleButton--3de26\";","import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFiltersContext } from \"../context/filters\";\n\nexport const useApplications = (queryClient: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getAll = (filters: IFiltersContext, currentPage: number, limit: number) =>\n    useQuery<any, Error>(\n      [\"applications\", filters, currentPage, limit],\n      () => API?.Applications.getAll(currentPage, limit),\n      {\n        onError: (error) => {\n          throw new Error(error.message);\n        },\n      },\n    );\n\n  const getOne = (applicationId: string) =>\n    useQuery<any, Error>([\"applications\", applicationId], () => API?.Applications.getOne(applicationId), {\n      initialData: () =>\n        queryClient.getQueryData<any[]>(\"applications\")?.find((_application) => _application.id === applicationId),\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      enabled: !!applicationId,\n    });\n\n  const getCount = () =>\n    useQuery<any, Error>([\"applications_count\"], () => API?.Applications.getCount(), {\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      refetchOnWindowFocus: false,\n      refetchOnReconnect: false,\n      retry: false,\n      staleTime: 60 * 10 * 1000, // 10 minutes\n    });\n\n  return { getOne, getAll, getCount };\n};\n","// extracted by mini-css-extract-plugin\nexport var backButton = \"ApplicationsDetailTemplate-module--backButton--5f643\";\nexport var buttonIcon = \"ApplicationsDetailTemplate-module--buttonIcon--3b584\";\nexport var components = \"ApplicationsDetailTemplate-module--components--eb9d2\";\nexport var container = \"ApplicationsDetailTemplate-module--container--e6fce\";\nexport var dependenciesDisplaySwitchButtons = \"ApplicationsDetailTemplate-module--dependenciesDisplaySwitchButtons--8b90b\";\nexport var description = \"ApplicationsDetailTemplate-module--description--31b70\";\nexport var header = \"ApplicationsDetailTemplate-module--header--bd1fa\";\nexport var layerAndCategoryContainer = \"ApplicationsDetailTemplate-module--layerAndCategoryContainer--f8e7d\";\nexport var noComponentsFound = \"ApplicationsDetailTemplate-module--noComponentsFound--23e6a\";\nexport var screenshot = \"ApplicationsDetailTemplate-module--screenshot--c7466\";\nexport var screenshotContainer = \"ApplicationsDetailTemplate-module--screenshotContainer--da970\";\nexport var title = \"ApplicationsDetailTemplate-module--title--8914e\";","import * as React from \"react\";\nimport * as styles from \"./ApplicationsDetailTemplate.module.css\";\nimport { Container } from \"@conduction/components\";\nimport {\n  Heading,\n  Icon,\n  Button,\n  ButtonGroup,\n  DataBadge,\n  Separator,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { faArrowLeft, faCircleNodes, faHouse, faLaptopCode, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { QueryClient } from \"react-query\";\nimport { useApplications } from \"../../hooks/applications\";\nimport { DependenciesTemplate } from \"../templateParts/dependenciesTemplates/ComponentDependenciesTemplate\";\nimport { ExpandableLeadParagraph } from \"../../components/expandableLeadParagraph/ExpandableLeadParagraph\";\nimport { TOOLTIP_ID } from \"../../layout/Layout\";\nimport { navigate } from \"gatsby-link\";\n\ninterface ApplicationsDetailTemplateProps {\n  applicationId: string;\n}\n\nexport const ApplicationsDetailTemplate: React.FC<ApplicationsDetailTemplateProps> = ({ applicationId }) => {\n  const { t } = useTranslation();\n  const [layerType, setlayerType] = React.useState<\"layer\" | \"relations\">(\"layer\");\n\n  const queryClient = new QueryClient();\n  const _useApplications = useApplications(queryClient);\n  const getApplications = _useApplications.getOne(applicationId);\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <Link className={styles.backButton} onClick={() => navigate(\"/applications\")}>\n        <Icon>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Icon>\n        {t(\"Back to applications\")}\n      </Link>\n\n      {getApplications.isSuccess && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.description}>\n              <Heading level={1} className={styles.title}>\n                {getApplications.data.name}\n              </Heading>\n\n              <ExpandableLeadParagraph\n                description={getApplications.data.description ?? t(\"There is no description available\")}\n              />\n\n              <div className={styles.layerAndCategoryContainer}>\n                {getApplications.data.embedded?.owner && (\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Organisatie\">\n                    <FontAwesomeIcon icon={faHouse} />\n                    {getApplications.data.embedded?.owner.fullName}\n                  </DataBadge>\n                )}\n\n                {getApplications.data.demoUrl && (\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Demo\"\n                    onClick={() => open(getApplications.data.demoUrl)}\n                  >\n                    <FontAwesomeIcon icon={faLaptopCode} />\n                    {t(\"Demo\")}\n                  </DataBadge>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Separator />\n\n          <div>\n            <Heading level={2} className={styles.title}>\n              Screenshot\n            </Heading>\n            <div className={styles.screenshotContainer}>\n              <img src={getApplications.data.detailPageImageUrl} className={styles.screenshot} />\n            </div>\n          </div>\n\n          <Separator />\n\n          {getApplications.data?.embedded?.components && (\n            <div className={styles.components}>\n              <ButtonGroup className={styles.dependenciesDisplaySwitchButtons}>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"layer\"}\n                  appearance={layerType === \"layer\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"layer\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faLayerGroup} />\n                  </Icon>{\" \"}\n                  {t(\"Layers\")}\n                </Button>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"relations\"}\n                  appearance={layerType === \"relations\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"relations\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faCircleNodes} />\n                  </Icon>{\" \"}\n                  {t(\"Relations\")}\n                </Button>\n              </ButtonGroup>\n\n              <DependenciesTemplate\n                type={layerType}\n                components={getApplications.data?.embedded?.components ?? []}\n                mainComponent={{\n                  id: getApplications.data.id,\n                  name: getApplications.data.name,\n                  layer: getApplications.data.embedded?.nl?.embedded?.commonground.layerType || null,\n                }}\n              />\n            </div>\n          )}\n\n          {!getApplications.data?.embedded?.components && (\n            <span className={styles.noComponentsFound}>Deze applicatie heeft (nog) geen gekoppelde componenten.</span>\n          )}\n        </>\n      )}\n\n      {getApplications.isLoading && <Skeleton height=\"200px\" />}\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport { ApplicationsDetailTemplate } from \"../../../templates/applicationsDetailTemplate/ApplicationsDetailTemplate\";\n\nconst ApplicationsDetailPage: React.FC<PageProps> = (props: PageProps) => {\n  return <ApplicationsDetailTemplate applicationId={props.params.applicationId} />;\n};\nexport default ApplicationsDetailPage;\n","// extracted by mini-css-extract-plugin\nexport var layerColorData = \"--web-app-layer-color-data\";\nexport var layerColorIntegration = \"--web-app-layer-color-integration\";\nexport var layerColorInterface = \"--web-app-layer-color-interaction\";\nexport var layerColorProcess = \"--web-app-layer-color-process\";\nexport var layerColorService = \"--web-app-layer-color-services\";\nexport var layerColorUnknown = \"--web-app-layer-color-unknown\";\nexport var relationsContainer = \"RelationsDependenciesTemplate-module--relationsContainer--56763\";","export const addNewLineToString = (string: string) => string.match(/.{1,25}(\\s|$)/g)?.join(\"\\n\");\n","import * as React from \"react\";\nimport * as styles from \"./RelationsDependenciesTemplate.module.css\";\nimport { Network } from \"vis-network\";\nimport _ from \"lodash\";\nimport { getTokenValue } from \"../../../../services/getTokenValue\";\nimport { addNewLineToString } from \"../../../../services/addNewLineToString\";\nimport { navigate } from \"gatsby\";\nimport \"vis-network/styles/vis-network.css\";\nimport { renderToStaticMarkup } from \"react-dom/server\";\nimport { TOOLTIP_ID } from \"../../../../layout/Layout\";\n\ninterface RelationsDependenciesTemplateProps {\n  components: any[];\n  mainComponent: {\n    id: string;\n    name: string;\n    layer: string;\n  };\n}\n\nexport const RelationsDependenciesTemplate: React.FC<RelationsDependenciesTemplateProps> = ({\n  components,\n  mainComponent,\n}) => {\n  const ToolTipElement = document.createElement(\"div\");\n  const staticToolTipElement = renderToStaticMarkup(\n    <div\n      data-tooltip-id={TOOLTIP_ID}\n      data-tooltip-content=\"Dubbelklik het component om naar het component te gaan\"\n    ></div>,\n  );\n  ToolTipElement.innerHTML = `${staticToolTipElement}`;\n\n  const componentNodes = components.map((component) => ({\n    id: component.id ?? component._self?.id,\n    label: addNewLineToString(component.name),\n    title: ToolTipElement,\n    layer: component.embedded?.nl?.embedded?.commonground?.layerType,\n    color: {\n      background: getTokenValue(\n        styles[\n          _.camelCase(\n            `layerColor ${_.upperFirst(\n              component.embedded?.nl?.embedded?.commonground?.layerType ?? component.layerType,\n            )}`,\n          )\n        ],\n      ),\n    },\n    font: {\n      color: \"white\",\n    },\n    scaling: {\n      min: 10,\n      max: 10,\n      label: {\n        enabled: true,\n        min: 10,\n        max: 10,\n      },\n    },\n    value: 1,\n    widthConstraint: 90,\n  }));\n\n  const mainComponentNode = {\n    id: mainComponent.id,\n    label: addNewLineToString(mainComponent.name),\n    layer: mainComponent.layer,\n    color: {\n      background: getTokenValue(styles[_.camelCase(`layerColor ${_.upperFirst(mainComponent.layer ?? \"Unknown\")}`)]),\n    },\n    font: { color: \"white\", size: 20 },\n  };\n\n  const nodes = [mainComponentNode, ...componentNodes];\n\n  const edges = nodes.map((component) => {\n    if (component.id === mainComponent.id) return {};\n\n    return {\n      from: component.id,\n      to: mainComponent.id,\n    };\n  });\n\n  const options = {\n    nodes: {\n      shape: \"circle\",\n      borderWidth: 0,\n      chosen: false,\n    },\n    edges: {\n      color: \"darkGray\",\n    },\n    physics: {\n      forceAtlas2Based: {\n        gravitationalConstant: -26,\n        centralGravity: 0.005,\n        springLength: 225,\n        springConstant: 0.18,\n      },\n      maxVelocity: 146,\n      solver: \"forceAtlas2Based\",\n      timestep: 0.35,\n      stabilization: { iterations: 150 },\n    },\n  };\n\n  const relationsContainerRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    const network =\n      relationsContainerRef.current && new Network(relationsContainerRef.current, { nodes, edges }, options);\n\n    if (!network) return;\n\n    network.on(\"doubleClick\", (event: { nodes: string[] }) => {\n      const componentId = event.nodes[0];\n\n      if (!componentId || componentId === mainComponent.id) return;\n\n      navigate(`/components/${event.nodes[0]}`);\n    });\n  }, [relationsContainerRef, nodes, edges]);\n\n  return <div ref={relationsContainerRef} className={styles.relationsContainer} />;\n};\n","import * as React from \"react\";\n\nimport { ComponentCardsAccordionTemplate } from \"../../componentCardsAccordion/ComponentCardsAccordionTemplate\";\n\ninterface LayersResultTemplateProps {\n  components: any[];\n}\n\nexport const LayerDependenciesTemplate: React.FC<LayersResultTemplateProps> = ({ components }) => {\n  return <ComponentCardsAccordionTemplate {...{ components }} />;\n};\n","import * as React from \"react\";\nimport * as _ from \"lodash\";\nimport { TComponentDependenciesLayout } from \"../../../context/filters\";\nimport { RelationsDependenciesTemplate } from \"./relationsDependenciesTemplate/RelationsDependenciesTemplate\";\nimport { LayerDependenciesTemplate } from \"./layerDependenciesTemplate/LayerDependenciesTemplate\";\nimport { LayerAccordionFiltersTemplate } from \"../layerAccordion/filters/LayerAccordionFiltersTemplate\";\n\ninterface DependenciesTemplateProps {\n  type: TComponentDependenciesLayout;\n  components: any[];\n  mainComponent: {\n    id: string;\n    name: string;\n    layer: string;\n  };\n}\n\nexport const DependenciesTemplate: React.FC<DependenciesTemplateProps> = ({ components, type, mainComponent }) => {\n  switch (type) {\n    case \"layer\":\n      return <LayerDependenciesTemplate {...{ components }} />;\n\n    case \"relations\":\n      return <RelationsDependencies {...{ components, mainComponent }} />;\n  }\n};\n\ninterface RelationsDependenciesProps {\n  components: any[];\n  mainComponent: {\n    id: string;\n    name: string;\n    layer: string;\n  };\n}\n\nconst RelationsDependencies: React.FC<RelationsDependenciesProps> = ({ components, mainComponent }) => {\n  const mappedComponents = components.map((component) => ({\n    ...component,\n    layerType: component?.embedded?.nl?.embedded?.commonground?.layerType ?? \"Unknown\",\n  }));\n\n  const interaction = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Interface\";\n  });\n  const process = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Process\";\n  });\n  const integration = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Integration\";\n  });\n  const services = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Service\";\n  });\n  const data = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Data\";\n  });\n  const unknown = mappedComponents.filter((component) => {\n    return _.upperFirst(component?.layerType) === \"Unknown\";\n  });\n\n  const { active: activeInteraction, setActive: setActiveInteraction } = FilterController();\n  const { active: activeProcess, setActive: setActiveProcess } = FilterController();\n  const { active: activeIntegration, setActive: setActiveIntegration } = FilterController();\n  const { active: activeServices, setActive: setActiveServices } = FilterController();\n  const { active: activeData, setActive: setActiveData } = FilterController();\n  const { active: activeUnknown, setActive: setActiveUnknown } = FilterController();\n\n  const filteredComponents = [\n    ...(activeInteraction ? interaction : []),\n    ...(activeProcess ? process : []),\n    ...(activeIntegration ? integration : []),\n    ...(activeServices ? services : []),\n    ...(activeData ? data : []),\n    ...(activeUnknown ? unknown : []),\n  ];\n  return (\n    <>\n      <LayerAccordionFiltersTemplate\n        items={[\n          {\n            label: \"Interaction\",\n            handleClick: setActiveInteraction,\n            active: activeInteraction,\n            disabled: !interaction.length,\n          },\n          { label: \"Process\", handleClick: setActiveProcess, active: activeProcess, disabled: !process.length },\n          {\n            label: \"Integration\",\n            handleClick: setActiveIntegration,\n            active: activeIntegration,\n            disabled: !integration.length,\n          },\n          { label: \"Service\", handleClick: setActiveServices, active: activeServices, disabled: !services.length },\n          { label: \"Data\", handleClick: setActiveData, active: activeData, disabled: !data.length },\n          { label: \"Unknown\", handleClick: setActiveUnknown, active: activeUnknown, disabled: !unknown.length },\n        ]}\n      />\n      <RelationsDependenciesTemplate mainComponent={{ ...mainComponent }} components={filteredComponents} />\n    </>\n  );\n};\n\nconst FilterController = () => {\n  const [active, setActive] = React.useState<boolean>(true);\n\n  return { active, setActive };\n};\n","// extracted by mini-css-extract-plugin\nexport var active = \"LayerAccordionFiltersTemplate-module--active--08daa\";\nexport var container = \"LayerAccordionFiltersTemplate-module--container--010d7\";\nexport var data = \"LayerAccordionFiltersTemplate-module--data--265e4\";\nexport var disabled = \"LayerAccordionFiltersTemplate-module--disabled--a6091\";\nexport var integration = \"LayerAccordionFiltersTemplate-module--integration--2131e\";\nexport var interaction = \"LayerAccordionFiltersTemplate-module--interaction--de074\";\nexport var process = \"LayerAccordionFiltersTemplate-module--process--c9270\";\nexport var service = \"LayerAccordionFiltersTemplate-module--service--3623c\";\nexport var unknown = \"LayerAccordionFiltersTemplate-module--unknown--06253\";","import * as React from \"react\";\nimport * as styles from \"./LayerAccordionFiltersTemplate.module.css\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LayerAccordionFiltersTemplateProps {\n  items: {\n    label: string;\n    active: boolean;\n    handleClick: React.Dispatch<React.SetStateAction<boolean>>;\n    disabled?: boolean;\n  }[];\n}\n\nexport const LayerAccordionFiltersTemplate: React.FC<LayerAccordionFiltersTemplateProps> = ({ items }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className={styles.container}>\n      {items.map(({ label, active, handleClick, disabled }, idx) => (\n        <span\n          key={idx}\n          onClick={() => !disabled && handleClick((o) => !o)}\n          className={clsx(\n            styles[label.toLowerCase()],\n            active && !disabled && styles.active,\n            disabled && styles.disabled,\n          )}\n        >\n          {t(label)}\n        </span>\n      ))}\n    </div>\n  );\n};\n"],"names":["ExpandableLeadParagraph","_ref","description","isExpanded","setIsExpanded","React","shortDescription","setShortDescription","descriptionIsExpandable","setDescriptionIsExpandable","length","substring","_jsxs","className","children","_jsx","Paragraph","lead","Button","appearance","clsx","onClick","FontAwesomeIcon","icon","faChevronRight","useApplications","queryClient","API","APIContext","getOne","applicationId","useQuery","Applications","initialData","_queryClient$getQuery","getQueryData","find","_application","id","onError","error","Error","message","enabled","getAll","filters","currentPage","limit","getCount","refetchOnWindowFocus","refetchOnReconnect","retry","staleTime","buttonIcon","title","ApplicationsDetailTemplate","_getApplications$data","_getApplications$data2","_getApplications$data3","_getApplications$data4","_getApplications$data5","_getApplications$data6","_getApplications$data7","_getApplications$data8","_getApplications$data9","_getApplications$data10","_getApplications$data11","_getApplications$data12","_getApplications$data13","t","useTranslation","layerType","setlayerType","QueryClient","getApplications","Container","layoutClassName","Link","navigate","Icon","faArrowLeft","isSuccess","_Fragment","Heading","level","styles","data","name","embedded","owner","DataBadge","TOOLTIP_ID","faHouse","fullName","demoUrl","open","faLaptopCode","Separator","src","detailPageImageUrl","components","ButtonGroup","pressed","faLayerGroup","faCircleNodes","DependenciesTemplate","type","mainComponent","layer","nl","commonground","isLoading","Skeleton","height","props","params","layerColorData","layerColorIntegration","layerColorInterface","layerColorProcess","layerColorService","layerColorUnknown","relationsContainer","addNewLineToString","string","_string$match","match","join","RelationsDependenciesTemplate","_mainComponent$layer","ToolTipElement","document","createElement","staticToolTipElement","renderToStaticMarkup","innerHTML","componentNodes","map","component","_component$id","_component$_self","_component$embedded","_component$embedded$n","_component$embedded$n2","_component$embedded$n3","_component$embedded$n4","_component$embedded2","_component$embedded2$","_component$embedded2$2","_component$embedded2$3","_self","label","color","background","getTokenValue","_camelCase","_upperFirst","font","scaling","min","max","value","widthConstraint","nodes","size","concat","_toConsumableArray","edges","from","to","options","shape","borderWidth","chosen","physics","forceAtlas2Based","gravitationalConstant","centralGravity","springLength","springConstant","maxVelocity","solver","timestep","stabilization","iterations","relationsContainerRef","network","current","Network","on","event","componentId","ref","LayerDependenciesTemplate","ComponentCardsAccordionTemplate","RelationsDependencies","_ref2","mappedComponents","interaction","filter","process","integration","services","unknown","active","activeInteraction","setActive","setActiveInteraction","FilterController","activeProcess","setActiveProcess","activeIntegration","setActiveIntegration","activeServices","setActiveServices","activeData","setActiveData","activeUnknown","setActiveUnknown","filteredComponents","LayerAccordionFiltersTemplate","items","handleClick","disabled","container","service","idx","o","toLowerCase"],"sourceRoot":""}