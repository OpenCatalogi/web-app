{"version":3,"file":"component---src-pages-documentation-usage-tsx-13c4e8a56da790e89fc3.js","mappings":"6GAoDEA,EAAOC,QAlDT,SAAgBC,GACd,IAAIC,OAAM,EAGRA,EAFqB,iBAAZD,EAEH,CAACA,GAEDA,EAAQC,IAKhB,IADA,IAAIC,EAAS,GACJC,EAAI,EAAGA,EAAIF,EAAIG,OAAQD,IAC9BD,GAAUD,EAAIE,GAEdE,QAAQ,cAAe,IAEvBA,QAAQ,OAAQ,KACZF,GAAKG,UAAUF,QAAU,EAAI,EAAIE,UAAUF,OAAS,KACtDF,GAAUI,UAAUF,QAAUD,EAAI,OAAII,EAAYD,UAAUH,EAAI,IAKpE,IAAIK,EAAQN,EAAOO,MAAM,MACrBC,EAAU,KAuBd,OAtBAF,EAAMG,SAAQ,SAAUC,GACtB,IAAIC,EAAID,EAAEE,MAAM,aAChB,GAAID,EAAG,CACL,IAAIE,EAASF,EAAE,GAAGT,OAKhBM,EAJGA,EAIOM,KAAKC,IAAIP,EAASK,GAFlBA,CAId,CACF,IACgB,OAAZL,IACFR,EAASM,EAAMU,KAAI,SAAUN,GAC3B,MAAgB,MAATA,EAAE,GAAaA,EAAEO,MAAMT,GAAWE,CAC3C,IAAGQ,KAAK,QAIVlB,EAASA,EAAOmB,QAGFhB,QAAQ,OAAQ,KAChC,C,uBClDe,SAASiB,EAA4BtB,EAASC,GAK3D,OAJKA,IACHA,EAAMD,EAAQmB,MAAM,IAEtBnB,EAAQC,IAAMA,EACPD,CACT,C,6CCLO,I,IAAIuB,EAAY,sDAGZC,EAAc,wDACdC,EAAU,oD,mGCKRC,EAAuC,WAClD,IAAQC,GAAMC,EAAAA,EAAAA,KAAND,EAER,OACEE,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAACC,gBDXQ,sDCW0BC,SAAA,EAC3CH,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAeF,SAAA,EACjCG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,qEAEnBG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACC,MAAI,EAACN,UAAWC,EAAmBF,SAAC,mFAKjDG,EAAAA,EAAAA,KAAA,WAASF,UAAWC,EAAeF,UACjCG,EAAAA,EAAAA,KAACK,EAAAA,EAAiB,CAChBC,MAAOd,EAAE,gEACTe,YAAaf,EAAE,oDACfgB,YAAahB,EAAE,yCAInBE,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAeF,SAAA,EACjCG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,qDACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,6OAIxCG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,6PAG8B,KACpCA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,4EAA2Ed,SAAA,EAClGG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACX,IAAI,YAGR,IAAI,8BACgB,KAC5Bb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,kDAAiDd,SAAA,EACxEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,YAGH,IAAI,oBAGdb,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,iDACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,wPAIxCG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,uFAGRA,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,gCACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,+CACK,KAC7CG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,gDAA+Cd,SAAA,EACtEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,2CAGJ,IACL,KACFb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,iCAAgCd,SAAA,EACvDG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,0BAGH,IAAI,OACTb,EAAAA,EAAAA,KAAA,UACHA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,oCAAmCd,SAAA,EAC1DG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,+BAGJ,iGAGTb,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,yCACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,aAC7B,KACXG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACK,GAAG,yBAAwBjB,SAAA,EAC/BG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACe,EAAAA,EAAc,MACV,qBAGH,IAAI,8IAKhBrB,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAeF,SAAA,EACjCG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAGc,GAAG,eAAcnB,SAAC,6CAGrCG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAC,wOAM5CH,EAAAA,EAAAA,MAAA,WAASI,UAAWC,EAAeF,SAAA,EACjCG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,kBACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,kJAETG,EAAAA,EAAAA,KAAA,UAC/BA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,+CAA8Cd,SAAA,EACrEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,qBAGJ,0GAEPb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,aAEFA,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,sCACnBG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAC,gPAK1CG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,mBACnBG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAC,+KAI1CG,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SACpCqB,IAAMC,IAAAA,EAAAhC,EAAA,sFAKTa,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,YACnBG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAC,8LAI1CG,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SAAA,2BACvCG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAAAN,SAAC,kKAIXG,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SAAA,iCACvCG,EAAAA,EAAAA,KAACG,EAAAA,GAAS,CAAAN,SAAC,kGAGXG,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SAAA,yBACvCH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAAAN,SAAA,CAAC,qEAC0D,KACnEG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,uBAAsBd,SAAA,EAC7CG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,4BAGH,IAAI,wCAEZb,EAAAA,EAAAA,KAAA,SAAM,KAACA,EAAAA,EAAAA,KAAA,SAAM,8JAEsC,KACnDA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,6DAA4Dd,SAAA,EACnFG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,sBAGJ,QAGTb,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,0CACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,6FACmD,KAC3FG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,yBAAwBd,SAAA,EAC/CG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,kBAGH,IAAI,sCACwB,KACpCb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,mBAAkBd,SAAA,EACzCG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,YAGH,IAAI,qHAEH,KACTb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,iCAAgCd,SAAA,EACvDG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,aAGH,IAAI,iFAEZb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,wFACgF,KACtFA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,wBAAuBd,SAAA,EAC9CG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,gBAGH,IAAI,KACT,KACHb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,uBAAsBd,SAAA,EAC7CG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,eAGJ,KAEPb,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,SAAM,gJAE0BA,EAAAA,EAAAA,KAAA,UAChCA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,gEAA+Dd,SAAA,EACtFG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,eAGJ,+BACsB,KAC7Bb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,0CAAyCd,SAAA,EAChEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,eAGH,IAAI,gCAGdb,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SACpCqB,IAAME,IAAAA,EAAAjC,EAAA,gMAITO,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAAAN,SAAA,CAAC,0GAC+F,KACxGG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CACHC,OAAO,OACPC,KAAK,wGAAuGd,SAAA,EAE5GG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,YAGJ,QAGTb,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAC,6BACnBH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAACL,UAAWC,EAAmBF,SAAA,CAAC,uDACa,KACrDG,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,iDAAgDd,SAAA,EACvEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,qBAGH,IAAI,qBACO,KACnBb,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,0BAAyBd,SAAA,EAChDG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,cAGJ,KAEPb,EAAAA,EAAAA,KAAA,SAAM,KAACA,EAAAA,EAAAA,KAAA,SAAM,sIAIfA,EAAAA,EAAAA,KAACiB,EAAAA,GAAS,CAACnB,UAAWC,EAAiBF,SAAA,oBACvCH,EAAAA,EAAAA,MAACS,EAAAA,GAAS,CAAAN,SAAA,CAAC,4GAC+FG,EAAAA,EAAAA,KAAA,SAAM,4BACpF,KAC1BA,EAAAA,EAAAA,KAAA,QAAAH,UACEH,EAAAA,EAAAA,MAACe,EAAAA,GAAI,CAACC,OAAO,OAAOC,KAAK,kDAAiDd,SAAA,EACxEG,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAACd,UAAU,iCAAgCD,UAC9CG,EAAAA,EAAAA,KAACa,EAAAA,EAAgB,MACZ,0BAGJ,YAMjB,ECzUA,EAJ4B,WAC1B,OAAOb,EAAAA,EAAAA,KAACT,EAA0B,GACpC,C,gLCHM8B,EAAO,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,EAAOC,EAA0BC,EAAkBC,GAAS,IAAAC,EAAA,OAAAL,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACpEN,EAAYO,cAAcN,GAAU,KAAD,GAEnCE,EAAoBH,EAAYQ,aAAoBP,KAGxDD,EAAYS,aAAaR,EAAS,CAAEC,GAAIQ,QAAAC,EAAAA,EAAAA,GAAKR,KAG/CH,EAAYY,kBAAkBX,GAAU,wBAAAG,EAAAS,OAAA,GAAAd,EAAA,KACzC,gBAVYe,EAAAC,EAAAC,GAAA,OAAApB,EAAAqB,MAAA,KAAAxE,UAAA,K,wCCgBAkC,EAAsD,SAAHiB,GAA6C,IAAvChB,EAAKgB,EAALhB,MAAOC,EAAWe,EAAXf,YAAaC,EAAWc,EAAXd,YAChFhB,GAAMC,EAAAA,EAAAA,KAAND,EACRoD,EAA8BC,EAAAA,UAAwB,GAA/CC,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,EAAsCH,EAAAA,UAAwB,GAAvDI,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GAG5BG,ECjBiB,SAACzB,GACxB,IAAM0B,EAAyBP,EAAAA,WAAiBQ,EAAAA,GAchD,MAAO,CAAEC,eAZc,WAAH,OAClBC,EAAAA,EAAAA,aAA6B,GAAIH,aAAG,EAAHA,EAAKI,OAAOF,eAAgB,CAC3DG,WAASC,GAAAnC,EAAAA,EAAAA,GAAAC,IAAAA,MAAE,SAAAC,EAAOkC,GAAa,OAAAnC,IAAAA,MAAA,SAAAM,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC7BX,EAAQK,EAAa,SAAUiC,GAC/BA,EAAcC,eAAgBC,EAAAA,EAAAA,IAAS,kBAAkBF,EAAcC,aAAaE,MAAM9C,IAC1F2C,EAAcI,YAAaF,EAAAA,EAAAA,IAAS,eAAeF,EAAcI,UAAUD,MAAM9C,IAAM,wBAAAc,EAAAS,OAAA,GAAAd,EAAA,KACxF,SAAAe,GAAA,OAAAkB,EAAAf,MAAA,KAAAxE,UAAA,GACD6F,QAAS,SAACC,GACRC,QAAQC,KAAKF,EAAMG,QACrB,IAPU,IAADV,CAQR,EAGP,CDCqBW,EADCC,EAAAA,EAAAA,mBAEdhB,EAAiBH,EAAWG,iBAWlCiB,GAKIC,EAAAA,EAAAA,MAJFC,EAAQF,EAARE,SACaC,EAAMH,EAAnBI,UAAaD,OACbE,EAAYL,EAAZK,aAIIC,GAAgBC,EAHfP,EAALO,OAG0B,YAS5B,OARAjC,EAAAA,WAAgB,WACdE,EAAWO,EAAeyB,UAC5B,GAAG,CAACzB,EAAeyB,YAEnBlC,EAAAA,WAAgB,WACdK,EAAeI,EAAe0B,QAChC,GAAG,CAAC1B,EAAe0B,WAGjBtF,EAAAA,EAAAA,MAAA,OAAKI,UEpDc,6CFoDcD,SAAA,EAC/BG,EAAAA,EAAAA,KAACC,EAAAA,GAAO,CAACC,MAAO,EAAEL,SAAES,KAEpBN,EAAAA,EAAAA,KAAA,QAAMiF,SAAUL,GA7BH,SAACM,GAChB,IAAMC,EAAU,CACdC,WAAUC,OAAAC,OAAA,GACLJ,IAGP5B,EAAeiC,OAAO,CAAEJ,QAAAA,GAC1B,IAsB2CtF,UACrCH,EAAAA,EAAAA,MAAA,OAAKI,UEtDY,+CFsDkBD,SAAA,EACjCG,EAAAA,EAAAA,KAACwF,EAAAA,GAAS,CAAC1F,UEtDE,6CFsD0BD,UACrCH,EAAAA,EAAAA,MAAC+F,EAAAA,GAAc,CAAA5F,SAAA,EACbG,EAAAA,EAAAA,KAAC0F,EAAAA,GAAOL,OAAAC,OAAA,CACNtE,GAAG,oBACCyD,EAAS,YAAW,CACxBkB,QAASjB,EAAiB,SAC1BnE,YAAaf,EAAEe,GACfqF,SAAU9C,EACV+C,KAAK,SAEN5C,IACCjD,EAAAA,EAAAA,KAAA,QAAMF,UEnEU,sDFmE2BD,SACxCL,EACC,gHAOVE,EAAAA,EAAAA,MAACoG,EAAAA,GAAM,CAAChG,UExEQ,gDFwEwB+F,KAAK,SAASD,SAAU9C,IAAY+B,EAAchF,SAAA,EACxFG,EAAAA,EAAAA,KAAC+F,EAAAA,EAAe,CAACC,KAAMC,EAAAA,MACtBzF,QAAAA,EAAehB,EAAE,kBAM9B,C","sources":["webpack://skeleton-pip/./node_modules/dedent/dist/dedent.js","webpack://skeleton-pip/./node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteralLoose.js","webpack://skeleton-pip/./src/templates/documentation/usageDocumentation/UsageDocumentationTemplate.module.css","webpack://skeleton-pip/./src/templates/documentation/usageDocumentation/UsageDocumentationTemplate.tsx","webpack://skeleton-pip/./src/pages/documentation/usage.tsx","webpack://skeleton-pip/./src/services/mutateQueries.ts","webpack://skeleton-pip/./src/templates/templateParts/submitUrl/SubmitUrlTemplate.tsx","webpack://skeleton-pip/./src/hooks/github.ts","webpack://skeleton-pip/./src/templates/templateParts/submitUrl/SubmitUrlTemplate.module.css"],"sourcesContent":["\"use strict\";\n\nfunction dedent(strings) {\n  var raw = void 0;\n  if (typeof strings === \"string\") {\n    // dedent can be used as a plain function\n    raw = [strings];\n  } else {\n    raw = strings.raw;\n  }\n\n  // first, perform interpolation\n  var result = \"\";\n  for (var i = 0; i < raw.length; i++) {\n    result += raw[i].\n    // join lines when there is a suppressed newline\n    replace(/\\\\\\n[ \\t]*/g, \"\").\n    // handle escaped backticks\n    replace(/\\\\`/g, \"`\");\n    if (i < (arguments.length <= 1 ? 0 : arguments.length - 1)) {\n      result += arguments.length <= i + 1 ? undefined : arguments[i + 1];\n    }\n  }\n\n  // now strip indentation\n  var lines = result.split(\"\\n\");\n  var mindent = null;\n  lines.forEach(function (l) {\n    var m = l.match(/^(\\s+)\\S+/);\n    if (m) {\n      var indent = m[1].length;\n      if (!mindent) {\n        // this is the first indented line\n        mindent = indent;\n      } else {\n        mindent = Math.min(mindent, indent);\n      }\n    }\n  });\n  if (mindent !== null) {\n    result = lines.map(function (l) {\n      return l[0] === \" \" ? l.slice(mindent) : l;\n    }).join(\"\\n\");\n  }\n\n  // dedent eats leading and trailing whitespace too\n  result = result.trim();\n\n  // handle escaped newlines at the end to ensure they don't get stripped too\n  return result.replace(/\\\\n/g, \"\\n\");\n}\nif (typeof module !== \"undefined\") {\n  module.exports = dedent;\n}","export default function _taggedTemplateLiteralLoose(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n  strings.raw = raw;\n  return strings;\n}","// extracted by mini-css-extract-plugin\nexport var codeBlock = \"UsageDocumentationTemplate-module--codeBlock--7435b\";\nexport var codeBlockContent = \"UsageDocumentationTemplate-module--codeBlockContent--6c069\";\nexport var container = \"UsageDocumentationTemplate-module--container--4864e\";\nexport var description = \"UsageDocumentationTemplate-module--description--d3f95\";\nexport var section = \"UsageDocumentationTemplate-module--section--0520c\";","import * as React from \"react\";\nimport * as styles from \"./UsageDocumentationTemplate.module.css\";\nimport { Container } from \"@conduction/components\";\nimport { CodeBlock, Heading, Paragraph, Icon } from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconExternalLink, IconArrowRight } from \"@tabler/icons-react\";\nimport dedent from \"dedent\";\nimport { Link } from \"../../../components\";\nimport { SubmitUrlTemplate } from \"../../templateParts/submitUrl/SubmitUrlTemplate\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const UsageDocumentationTemplate: React.FC = () => {\n  const { t } = useTranslation();\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <section className={styles.section}>\n        <Heading level={1}>Componenten op OpenCatalogi plaatsen en Componenten installeren</Heading>\n\n        <Paragraph lead className={styles.description}>\n          Er zijn vier manieren om een component zichtbaar te maken op OpenCatalogi.\n        </Paragraph>\n      </section>\n\n      <section className={styles.section}>\n        <SubmitUrlTemplate\n          title={t(\"Already have a repository URL? Then register it immediately.\")}\n          placeholder={t(\"Repository url of your component or organization\")}\n          buttonLabel={t(\"Submit component or organization\")}\n        />\n      </section>\n\n      <section className={styles.section}>\n        <Heading level={2}>1. Een publiccode.yaml opnemen in je repository</Heading>\n        <Paragraph className={styles.description}>\n          OpenCatalogi is gebouwd op het Europese public code framework. Uitgangspunt hierbij is dat open source,\n          betekent dat de source code in een git repository staat (bijvoorbeeld Github, Gitlab of SourceTree) die\n          openbaar toegankelijk is.\n          <br />\n          <br />\n          Vanuit de gedachte zelf documenterende code hoef je in dit geval alleen een publiccode.yaml op te nemen in de\n          root van je repository. In deze yaml beschrijf je het project op een voor machines leesbare manier. Meer\n          uitleg over publiccode.yaml vind je{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://yml.publiccode.tools/schema.core.html#top-level-keys-and-sections\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>{\" \"}\n              hier\n            </Link>\n          </span>{\" \"}\n          en een online-editor kun je{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://publiccode-editor.developers.italia.it/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              hier\n            </Link>\n          </span>{\" \"}\n          terug vinden.\n        </Paragraph>\n        <Heading level={2}>2. Start een eigen OpenCatalogi installatie</Heading>\n        <Paragraph className={styles.description}>\n          OpenCatalogi is een federatief ecosysteem dat betekent dat iedere organisatie zijn eigen componenten catalogus\n          kan starten. Vanuit de eigen catalogus kunnen zowel componenten worden geïmporteerd als beschikbaar gesteld\n          voor andere catalogussen.\n          <br />\n          <br />\n          Meer informatie over het zelf inrichten van een OpenCatalogi vind je hier onder.\n        </Paragraph>\n        <Heading level={2}>3. Via andere catalogussen</Heading>\n        <Paragraph className={styles.description}>\n          OpenCatalogi synchroniseert onder andere met{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://componentencatalogus.commonground.nl/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Common Ground Componenten­catalogus\n            </Link>\n          </span>\n          ,{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://developer.overheid.nl/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Developer Overheid\n            </Link>\n          </span>{\" \"}\n          en <br />\n          <span>\n            <Link target=\"_new\" href=\"https://www.softwarecatalogus.nl/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              GEMMA Softwarecatalogus\n            </Link>\n          </span>\n          , het daar vermelden van software zorgt ervoor dat deze wordt overgenomen in OpenCatalogi.\n        </Paragraph>\n        <Heading level={2}>4. Via het aanmaken van een account</Heading>\n        <Paragraph className={styles.description}>\n          U kunt via{\" \"}\n          <span>\n            <Link to=\"/documentation/contact\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconArrowRight />\n              </Icon>\n              dit formulier\n            </Link>\n          </span>{\" \"}\n          een account aanvragen. Via een account kunt u de gegevens van uw component en organisatie aanpassen en nieuwe\n          componenten aanmelden.\n        </Paragraph>\n      </section>\n      <section className={styles.section}>\n        <Heading level={1} id=\"intsallation\">\n          Installeren met de skeleton application\n        </Heading>\n        <Paragraph className={styles.description}>\n          De skeleton application is een makkelijke manier om de componenten te installeren en te gebruiken. De skeleton\n          application is namelijk ontworpen voor snelle applicatietesten en prototypeontwikkeling op het NL Design\n          System.\n        </Paragraph>\n      </section>\n      <section className={styles.section}>\n        <Heading level={2}>Aan de slag </Heading>\n        <Paragraph className={styles.description}>\n          Om een eigen project op te zetten heb je een GitHub-account nodig en daar mee ingelogd zijn. Klik op de groene\n          \"Use this template\" knop op de <br />\n          <span>\n            <Link target=\"_new\" href=\"https://github.com/ConductionNL/skeleton-app\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              GitHub-pagina\n            </Link>\n          </span>\n          . Vertel GitHub waar je je prototype wilt hebben draaien en klik op \"reate a repository from template\"\n          <br />\n          <br />\n        </Paragraph>\n        <Heading level={2}>Lokaal je omgeving laten draaien</Heading>\n        <Paragraph className={styles.description}>\n          Om lokaal te ontwikkelen, moet je de nieuwe repository klonen naar je eigen lokale machine. Open een terminal,\n          navigeer naar de folder die de repository bevat, en maak een keuze tussen Node.js/npm of Docker om de app te\n          laten draaien.\n        </Paragraph>\n        <Heading level={2}>Node.js / NPM</Heading>\n        <Paragraph className={styles.description}>\n          Je hebt een Git client nodig(optioneel), en je moet Node.js en NPM geïnstalleerd hebben. Dit gaat poort:8000\n          gebruiken, dus zorg er voor dit poort niet al in gebruik is.\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>\n          {dedent`\n          $ cd /pwa\n          $ npm install\n          $ npm run develop`}\n        </CodeBlock>\n        <Heading level={2}>Docker</Heading>\n        <Paragraph className={styles.description}>\n          Je moet Docker geïnstalleerd hebben. Docker laat de gateway van Conduction op poort:80 draaien en ook de app\n          zelf op poort:8000, dus zorg er voor dat deze poorten niet in gebruik zijn.\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>{`$ docker-compose pull`}</CodeBlock>\n        <Paragraph>\n          De eerste keer dat je Docker containers of wanneer je grote veranderingen hebt gemaakt aan de werking van de\n          applicatie, voert je het volgende commando uit:\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>{`$ docker-compose up --build`}</CodeBlock>\n        <Paragraph>\n          Als je dit niet doet dan draai je de containers zonder de applicatie container te herbouwen.\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>{`$ docker-compose up`}</CodeBlock>\n        <Paragraph>\n          Na het succesvol instellen van de ontwikkelomgeving, navigeer naar{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"http://localhost:81/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              http://localhost:81/\n            </Link>\n          </span>{\" \"}\n          om de app in de browser te bekijken.\n          <br /> <br />\n          Om de werking van de common-gateway die samen met de applicatie gaat draaien, te veranderen verwijzen we\n          vriendelijk naar de technische documentatie van de{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://docs.conductor-gateway.app/en/latest/installation/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              common-gateway\n            </Link>\n          </span>\n          .\n        </Paragraph>\n        <Heading level={2}>Installeren op Kubernetes omgevingen</Heading>\n        <Paragraph className={styles.description}>\n          Om de applicatie te installeren op je eigen cloud omgeving ondersteunen we installaties in{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://kubernetes.io/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              kubernetes\n            </Link>\n          </span>{\" \"}\n          met het gebruik van de bijgeleverde{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://helm.sh/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Helm\n            </Link>\n          </span>{\" \"}\n          grafiek. Kubernetes is een Container Orkestratie dat een standaard is geworden voor Nederlandse gemeenten\n          onder de{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://haven.commonground.nl/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Haven\n            </Link>\n          </span>{\" \"}\n          standaard, en waar Helm de standaard installatie methode voor componenten is.\n          <br />\n          <br />\n          De Helm grafiek kan geïnstalleerd worden met de hulp van Kubernetes beheertools zoals{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://dashkube.com/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Dashkube\n            </Link>\n          </span>{\" \"}\n          of{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://rancher.com/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Rancher\n            </Link>\n          </span>\n          .\n          <br />\n          <br />\n          De Helm grafiek kan ook geïnstalleerd worden door Helm te draaien van je lokale machine (zie de instructies\n          over hoe je Helm installeert op <br />\n          <span>\n            <Link target=\"_new\" href=\"https://helm.sh/docs/intro/install/#through-package-managers/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              helm.sh\n            </Link>\n          </span>\n          , hiervoor is het vereist om{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://kubernetes.io/docs/tasks/tools/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              kubectl\n            </Link>\n          </span>{\" \"}\n          te hebben geïnstalleerd).\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>\n          {dedent`\n          $ helm repo add opencatalogi https://raw.githubusercontent.com/opencatalogi/web-app/development/helm/\n          $ helm install my-opencatalogi opencatalogi/opencatalogi`}\n        </CodeBlock>\n        <Paragraph>\n          Voor overige configuratie verwijzen we vriendelijk naar de documentatie van de helm grafiek die vind je{\" \"}\n          <span>\n            <Link\n              target=\"_new\"\n              href=\"https://github.com/OpenCatalogi/web-app/blob/e3fdf396cd5fb39266fd77a2af404cb59a881cb7/helm/README.md/\"\n            >\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              hier\n            </Link>\n          </span>\n          .\n        </Paragraph>\n        <Heading level={2}>Technische Documentatie</Heading>\n        <Paragraph className={styles.description}>\n          De volledige technische documentatie is te vinden op{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://skeleton-app.readthedocs.io/en/latest/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              Read the Docs\n            </Link>\n          </span>{\" \"}\n          en is gebaseerd op{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://www.mkdocs.org/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              MKDocs\n            </Link>\n          </span>\n          .\n          <br /> <br />\n          Als je de technische documentatie lokaal wilt draaien, kan je dit doen door middel van de MKDocs server en het\n          \"erve\" commando.\n        </Paragraph>\n        <CodeBlock className={styles.codeBlock}>{`$ mkdocs serve`}</CodeBlock>\n        <Paragraph>\n          Ga naar de repository en voer het commando uit om de documentatie beschikbaar te stellen op poort:8000. <br />\n          Zorg er voor dat je eerst{\" \"}\n          <span>\n            <Link target=\"_new\" href=\"https://www.mkdocs.org/user-guide/installation/\">\n              <Icon className=\"utrecht-icon--conduction-start\">\n                <IconExternalLink />\n              </Icon>\n              MKDocs installeert\n            </Link>\n          </span>\n          .\n        </Paragraph>\n      </section>\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport { UsageDocumentationTemplate } from \"../../templates/documentation/usageDocumentation/UsageDocumentationTemplate\";\n\nconst IndexPage: React.FC = () => {\n  return <UsageDocumentationTemplate />;\n};\n\nexport default IndexPage;\n","import { QueryClient } from \"react-query\";\n\nconst addItem = async (queryClient: QueryClient, queryKey: string, item: any) => {\n  await queryClient.cancelQueries(queryKey);\n\n  const previousQueryData = queryClient.getQueryData<any[]>(queryKey);\n\n  if (previousQueryData) {\n    queryClient.setQueryData(queryKey, [item, ...previousQueryData]);\n  }\n\n  queryClient.invalidateQueries(queryKey);\n};\n\nexport { addItem };\n","import * as React from \"react\";\r\nimport * as styles from \"./SubmitUrlTemplate.module.css\";\r\nimport { FormFieldInput } from \"@gemeente-denhaag/components-react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPaperPlane } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useQueryClient } from \"react-query\";\r\nimport { useGithub } from \"../../../hooks/github\";\r\nimport { Button } from \"@utrecht/component-library-react\";\r\nimport { FormField, Textbox, Heading } from \"@utrecht/component-library-react/dist/css-module\";\r\n\r\ninterface SubmitUrlTemplateProps {\r\n  title: string;\r\n  placeholder: string;\r\n  buttonLabel?: string;\r\n}\r\n\r\nexport const SubmitUrlTemplate: React.FC<SubmitUrlTemplateProps> = ({ title, placeholder, buttonLabel }) => {\r\n  const { t } = useTranslation();\r\n  const [loading, setLoading] = React.useState<boolean>(false);\r\n  const [formIsError, setFormIsError] = React.useState<boolean>(false);\r\n\r\n  const queryClient = useQueryClient();\r\n  const _useGithub = useGithub(queryClient);\r\n  const postRepository = _useGithub.postRepository();\r\n\r\n  const onSubmit = (data: any): void => {\r\n    const payload = {\r\n      repository: {\r\n        ...data,\r\n      },\r\n    };\r\n    postRepository.mutate({ payload });\r\n  };\r\n\r\n  const {\r\n    register,\r\n    formState: { errors },\r\n    handleSubmit,\r\n    watch,\r\n  } = useForm();\r\n\r\n  const watchInputUrl = watch(\"html_url\");\r\n  React.useEffect(() => {\r\n    setLoading(postRepository.isLoading);\r\n  }, [postRepository.isLoading]);\r\n\r\n  React.useEffect(() => {\r\n    setFormIsError(postRepository.isError);\r\n  }, [postRepository.isError]);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Heading level={4}>{title}</Heading>\r\n\r\n      <form onSubmit={handleSubmit(onSubmit)}>\r\n        <div className={styles.formContent}>\r\n          <FormField className={styles.formField}>\r\n            <FormFieldInput>\r\n              <Textbox\r\n                id=\"submitUrlTextBox\"\r\n                {...register(\"html_url\")}\r\n                invalid={errors[\"html_url\"]}\r\n                placeholder={t(placeholder)}\r\n                disabled={loading}\r\n                type=\"url\"\r\n              />\r\n              {formIsError && (\r\n                <span className={styles.customErrorMessage}>\r\n                  {t(\r\n                    \"Oops, something went wrong. Please make sure you're using a valid repository URL or try again later.\",\r\n                  )}\r\n                </span>\r\n              )}\r\n            </FormFieldInput>\r\n          </FormField>\r\n\r\n          <Button className={styles.submitButton} type=\"submit\" disabled={loading || !watchInputUrl}>\r\n            <FontAwesomeIcon icon={faPaperPlane} />\r\n            {buttonLabel ?? t(\"Send\")}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { QueryClient, useMutation } from \"react-query\";\r\nimport APIService from \"../apiService/apiService\";\r\nimport APIContext from \"../apiService/apiContext\";\r\nimport { addItem } from \"../services/mutateQueries\";\r\nimport { navigate } from \"gatsby\";\r\n\r\nexport const useGithub = (queryClient: QueryClient) => {\r\n  const API: APIService | null = React.useContext(APIContext);\r\n\r\n  const postRepository = () =>\r\n    useMutation<any, Error, any>([], API?.Github.postRepository, {\r\n      onSuccess: async (newRepository) => {\r\n        addItem(queryClient, \"github\", newRepository);\r\n        newRepository.organization && navigate(`/organizations/${newRepository.organization._self.id}`);\r\n        newRepository.component && navigate(`/components/${newRepository.component._self.id}`);\r\n      },\r\n      onError: (error) => {\r\n        console.warn(error.message);\r\n      },\r\n    });\r\n\r\n  return { postRepository };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var container = \"SubmitUrlTemplate-module--container--a039d\";\nexport var customErrorMessage = \"SubmitUrlTemplate-module--customErrorMessage--01163\";\nexport var formContent = \"SubmitUrlTemplate-module--formContent--1d7ac\";\nexport var formField = \"SubmitUrlTemplate-module--formField--4d7d9\";\nexport var standardsTableWrapper = \"SubmitUrlTemplate-module--standardsTableWrapper--13253\";\nexport var submitButton = \"SubmitUrlTemplate-module--submitButton--41942\";"],"names":["module","exports","strings","raw","result","i","length","replace","arguments","undefined","lines","split","mindent","forEach","l","m","match","indent","Math","min","map","slice","join","trim","_taggedTemplateLiteralLoose","codeBlock","description","section","UsageDocumentationTemplate","t","useTranslation","_jsxs","Container","layoutClassName","children","className","styles","_jsx","Heading","level","Paragraph","lead","SubmitUrlTemplate","title","placeholder","buttonLabel","Link","target","href","Icon","IconExternalLink","to","IconArrowRight","id","CodeBlock","dedent","_templateObject","_templateObject2","addItem","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","queryClient","queryKey","item","previousQueryData","_context","prev","next","cancelQueries","getQueryData","setQueryData","concat","_toConsumableArray","invalidateQueries","stop","_x","_x2","_x3","apply","_React$useState","React","loading","setLoading","_React$useState2","formIsError","setFormIsError","_useGithub","API","APIContext","postRepository","useMutation","Github","onSuccess","_onSuccess","newRepository","organization","navigate","_self","component","onError","error","console","warn","message","useGithub","useQueryClient","_useForm","useForm","register","errors","formState","handleSubmit","watchInputUrl","watch","isLoading","isError","onSubmit","data","payload","repository","Object","assign","mutate","FormField","FormFieldInput","Textbox","invalid","disabled","type","Button","FontAwesomeIcon","icon","faPaperPlane"],"sourceRoot":""}