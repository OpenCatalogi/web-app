{"version":3,"file":"component---src-pages-components-components-page-tsx-c36fb6fb997894550731.js","mappings":"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","sources":["webpack://skeleton-pip/./node_modules/@tabler/icons-react/dist/esm/icons/IconInfoCircle.js","webpack://skeleton-pip/./src/templates/components/ComponentsTemplate.tsx","webpack://skeleton-pip/./src/hooks/search.ts","webpack://skeleton-pip/./src/templates/components/ComponentsTemplate.module.css","webpack://skeleton-pip/./src/pages/components/ComponentsPage.tsx"],"sourcesContent":["/**\n * @tabler/icons-react v2.42.0 - MIT\n */\n\nimport createReactComponent from '../createReactComponent.js';\n\nvar IconInfoCircle = createReactComponent(\"info-circle\", \"IconInfoCircle\", [\n  [\"path\", { d: \"M3 12a9 9 0 1 0 18 0a9 9 0 0 0 -18 0\", key: \"svg-0\" }],\n  [\"path\", { d: \"M12 9h.01\", key: \"svg-1\" }],\n  [\"path\", { d: \"M11 12h1v4h1\", key: \"svg-2\" }]\n]);\n\nexport { IconInfoCircle as default };\n//# sourceMappingURL=IconInfoCircle.js.map\n","import * as React from \"react\";\nimport * as styles from \"./ComponentsTemplate.module.css\";\nimport Skeleton from \"react-loading-skeleton\";\nimport clsx from \"clsx\";\nimport { IDisplaySwitchButton } from \"@conduction/components/lib/components/displaySwitch/DisplaySwitch\";\nimport { Container, DisplaySwitch, Pagination } from \"@conduction/components\";\nimport { ComponentResultTemplate } from \"../templateParts/resultsTemplates/ComponentResultsTemplate\";\nimport { useFiltersContext } from \"../../context/filters\";\nimport { useTranslation } from \"react-i18next\";\nimport { QueryClient } from \"react-query\";\nimport { VerticalFiltersTemplate } from \"../templateParts/filters/verticalFilters/VerticalFiltersTemplate\";\nimport { HorizontalFiltersTemplate } from \"../templateParts/filters/horizontalFilters/HorizontalFiltersTemplate\";\nimport { SubmitComponentTemplate } from \"../templateParts/submitComponent/SubmitComponentTemplate\";\nimport { useSearch } from \"../../hooks/search\";\nimport { ActiveFiltersTemplate } from \"../templateParts/filters/activeFilters/ActiveFiltersTemplate\";\nimport { Alert, Heading, Icon, Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconInfoCircle } from \"@tabler/icons-react\";\nimport { usePaginationContext } from \"../../context/pagination\";\nimport { PaginationLimitSelectComponent } from \"../../components/paginationLimitSelect/PaginationLimitSelect\";\nimport { useQueryLimitContext } from \"../../context/queryLimit\";\nimport { useResultDisplayLayoutContext } from \"../../context/resultDisplayLayout\";\n\nexport const ComponentsTemplate: React.FC = () => {\n  const { t } = useTranslation();\n  const { filters } = useFiltersContext();\n  const { queryLimit, setQueryLimit } = useQueryLimitContext();\n  const { pagination, setPagination } = usePaginationContext();\n  const { resultDisplayLayout, setResultDisplayLayout } = useResultDisplayLayoutContext();\n\n  const queryClient = new QueryClient();\n  const _useSearch = useSearch(queryClient);\n  const getComponents = _useSearch.getSearch(\n    { ...filters, organizationSearch: \"\" },\n    pagination.componentsCurrentPage,\n    queryLimit.componentsSearchQueryLimit,\n  ); // Ensure no refetch on resultDisplayLayout change\n\n  React.useEffect(() => {\n    if (queryLimit.previousComponentsSearchQueryLimit === queryLimit.componentsSearchQueryLimit) return;\n\n    setPagination({ ...pagination, componentsCurrentPage: 1 });\n    setQueryLimit({ ...queryLimit, previousComponentsSearchQueryLimit: queryLimit.componentsSearchQueryLimit });\n  }, [queryLimit.componentsSearchQueryLimit]);\n\n  const displaySwitchButtons: IDisplaySwitchButton[] = [\n    {\n      label: t(\"Table\"),\n      pressed: resultDisplayLayout.componentsDisplayLayout === \"table\",\n      handleClick: () => setResultDisplayLayout({ ...resultDisplayLayout, componentsDisplayLayout: \"table\" }),\n      icon: {\n        name: \"table\",\n        prefix: \"fas\",\n      },\n    },\n    {\n      label: t(\"Cards\"),\n      pressed: resultDisplayLayout.componentsDisplayLayout === \"cards\",\n      handleClick: () => setResultDisplayLayout({ ...resultDisplayLayout, componentsDisplayLayout: \"cards\" }),\n      icon: {\n        name: \"grip-vertical\",\n        prefix: \"fas\",\n      },\n    },\n    {\n      label: t(\"Layer\"),\n      pressed: resultDisplayLayout.componentsDisplayLayout === \"layer\",\n      handleClick: () => setResultDisplayLayout({ ...resultDisplayLayout, componentsDisplayLayout: \"layer\" }),\n      icon: {\n        name: \"layer-group\",\n        prefix: \"fas\",\n      },\n    },\n  ];\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <div className={styles.header}>\n        <div>\n          <Heading level={2} className={clsx(styles.title, !getComponents.isSuccess && styles.loading)}>\n            {t(\"Components\")}{\" \"}\n            {getComponents.data?.total >= 0 ? (\n              `(${getComponents.data.total})`\n            ) : (\n              <>\n                (<Skeleton height=\"1ch\" width=\"1ch\" />)\n              </>\n            )}\n          </Heading>\n        </div>\n\n        <DisplaySwitch buttons={displaySwitchButtons} />\n      </div>\n\n      <div className={styles.filtersAndResultsContainer}>\n        <VerticalFiltersTemplate filterSet={[filters]} layoutClassName={styles.verticalFilters} />\n\n        <div className={styles.results}>\n          <HorizontalFiltersTemplate />\n          {resultDisplayLayout.componentsDisplayLayout === \"table\" && (\n            <Alert\n              type=\"info\"\n              icon={\n                <Icon>\n                  <IconInfoCircle />\n                </Icon>\n              }\n            >\n              <Paragraph>Op deze pagina worden alle resultaten weergegeven</Paragraph>\n            </Alert>\n          )}\n\n          {resultDisplayLayout.componentsDisplayLayout === \"cards\" && (\n            <Alert\n              type=\"info\"\n              icon={\n                <Icon>\n                  <IconInfoCircle />\n                </Icon>\n              }\n            >\n              <Paragraph>Op deze pagina staan alleen applicaties, organisaties en componenten</Paragraph>\n            </Alert>\n          )}\n          {resultDisplayLayout.componentsDisplayLayout === \"layer\" && (\n            <Alert\n              type=\"info\"\n              icon={\n                <Icon>\n                  <IconInfoCircle />\n                </Icon>\n              }\n            >\n              <Paragraph>Op deze pagina staan alleen componenten met een laag</Paragraph>\n            </Alert>\n          )}\n\n          <ActiveFiltersTemplate />\n\n          {getComponents.data?.results?.length === 0 && !getComponents.isLoading && (\n            <span>{t(\"No components found with active filters\")}</span>\n          )}\n\n          {getComponents.data?.results && getComponents.data?.results?.length > 0 && (\n            <>\n              <ComponentResultTemplate\n                components={getComponents.data.results}\n                type={resultDisplayLayout.componentsDisplayLayout}\n              />\n\n              <SubmitComponentTemplate />\n              {getComponents.data.results.length && (\n                <div className={styles.pagination}>\n                  <Pagination\n                    layoutClassName={styles.paginationContainer}\n                    totalPages={getComponents.data.pages}\n                    currentPage={getComponents.data.page}\n                    setCurrentPage={(page: any) => setPagination({ ...pagination, componentsCurrentPage: page })}\n                    ariaLabels={{\n                      pagination: t(\"Pagination\"),\n                      nextPage: t(\"Next page\"),\n                      previousPage: t(\"Previous page\"),\n                      page: t(\"Page\"),\n                    }}\n                  />\n                  <PaginationLimitSelectComponent queryLimitName={\"componentsSearchQueryLimit\"} />\n                </div>\n              )}\n            </>\n          )}\n          {getComponents.isLoading && <Skeleton height=\"200px\" />}\n        </div>\n      </div>\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFiltersContext } from \"../context/filters\";\n\nexport const useSearch = (_: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getSearch = (filters: IFiltersContext, currentPage: number, limit: number) =>\n    useQuery<any, Error>(\n      [\"search\", filters, currentPage, limit],\n      () => API?.Search.getSearch(filters, currentPage, limit),\n      {\n        onError: (error) => {\n          throw new Error(error.message);\n        },\n      },\n    );\n\n  return { getSearch };\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentAlert = \"ComponentsTemplate-module--ComponentAlert--a85b8\";\nexport var container = \"ComponentsTemplate-module--container--ad5b0\";\nexport var filtersAndResultsContainer = \"ComponentsTemplate-module--filtersAndResultsContainer--695e9\";\nexport var header = \"ComponentsTemplate-module--header--b53e6\";\nexport var loading = \"ComponentsTemplate-module--loading--d9a0c\";\nexport var pagination = \"ComponentsTemplate-module--pagination--48dc3\";\nexport var paginationContainer = \"ComponentsTemplate-module--paginationContainer--c888f\";\nexport var results = \"ComponentsTemplate-module--results--dd6ae\";\nexport var title = \"ComponentsTemplate-module--title--23767\";\nexport var verticalFilters = \"ComponentsTemplate-module--verticalFilters--72ae3\";","import * as React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport { ComponentsTemplate } from \"../../templates/components/ComponentsTemplate\";\n\nconst ComponentsPage: React.FC<PageProps> = () => {\n  return <ComponentsTemplate />;\n};\n\nexport default ComponentsPage;\n"],"names":["IconInfoCircle","d","key","ComponentsTemplate","_getComponents$data","_getComponents$data2","_getComponents$data2$","_getComponents$data3","_getComponents$data4","_getComponents$data4$","t","useTranslation","filters","useFiltersContext","queryLimit","setQueryLimit","useQueryLimitContext","pagination","setPagination","usePaginationContext","resultDisplayLayout","setResultDisplayLayout","useResultDisplayLayoutContext","_useSearch","QueryClient","_","API","React","APIContext","getSearch","currentPage","limit","useQuery","Search","onError","error","Error","message","useSearch","getComponents","organizationSearch","componentsCurrentPage","componentsSearchQueryLimit","previousComponentsSearchQueryLimit","displaySwitchButtons","label","pressed","componentsDisplayLayout","handleClick","icon","name","prefix","_jsxs","Container","layoutClassName","children","className","_jsx","Heading","level","clsx","isSuccess","data","total","_Fragment","Skeleton","height","width","DisplaySwitch","buttons","VerticalFiltersTemplate","filterSet","HorizontalFiltersTemplate","Alert","type","Icon","Paragraph","ActiveFiltersTemplate","results","length","isLoading","ComponentResultTemplate","components","SubmitComponentTemplate","Pagination","totalPages","pages","page","setCurrentPage","ariaLabels","nextPage","previousPage","PaginationLimitSelectComponent","queryLimitName","ComponentsPage"],"sourceRoot":""}