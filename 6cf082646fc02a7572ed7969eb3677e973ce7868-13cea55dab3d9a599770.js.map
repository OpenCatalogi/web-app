{"version":3,"file":"6cf082646fc02a7572ed7969eb3677e973ce7868-13cea55dab3d9a599770.js","mappings":"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","sources":["webpack://skeleton-pip/./src/services/getResultsUrl.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.tsx","webpack://skeleton-pip/./src/services/getTypeFromSchemaRef.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/layers/LayersResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/ComponentResultsTemplate.tsx"],"sourcesContent":["export const getResultsUrl = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"organizations\";\n  if (value.includes(\"component.schema.json\")) return \"components\";\n  if (value.includes(\"application.schema.json\")) return \"applications\";\n  if (value.includes(\"contacts.schema.json\")) return \"contacts\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"componentlegalentities\";\n\n  //TODO add more values if we make more detail pages\n};\n","// extracted by mini-css-extract-plugin\nexport var bronzeRating = \"TableResultTemplate-module--bronzeRating--35242\";\nexport var dataCategory = \"TableResultTemplate-module--dataCategory--3b1ef\";\nexport var dataLayer = \"TableResultTemplate-module--dataLayer--08c4e\";\nexport var detailsLink = \"TableResultTemplate-module--detailsLink--5c419\";\nexport var goldRating = \"TableResultTemplate-module--goldRating--bb4fe\";\nexport var icon = \"TableResultTemplate-module--icon--3748e\";\nexport var integrationCategory = \"TableResultTemplate-module--integrationCategory--c30df\";\nexport var integrationLayer = \"TableResultTemplate-module--integrationLayer--d5e43\";\nexport var interactionCategory = \"TableResultTemplate-module--interactionCategory--33b43\";\nexport var interactionLayer = \"TableResultTemplate-module--interactionLayer--e787a\";\nexport var interfaceCategory = \"TableResultTemplate-module--interfaceCategory--1f672\";\nexport var interfaceLayer = \"TableResultTemplate-module--interfaceLayer--eaa6a\";\nexport var name = \"TableResultTemplate-module--name--6b85e\";\nexport var procesCategory = \"TableResultTemplate-module--procesCategory--5a2fc\";\nexport var processCategory = \"TableResultTemplate-module--processCategory--50b3a\";\nexport var processLayer = \"TableResultTemplate-module--processLayer--359ae\";\nexport var processsLayer = \"TableResultTemplate-module--processsLayer--150d4\";\nexport var ratingIndicatorContainer = \"TableResultTemplate-module--ratingIndicatorContainer--d7764\";\nexport var ratingTableCell = \"TableResultTemplate-module--ratingTableCell--84a55\";\nexport var serviceCategory = \"TableResultTemplate-module--serviceCategory--1a87c\";\nexport var serviceLayer = \"TableResultTemplate-module--serviceLayer--19304\";\nexport var servicesCategory = \"TableResultTemplate-module--servicesCategory--cf685\";\nexport var servicesLayer = \"TableResultTemplate-module--servicesLayer--5d508\";\nexport var silverRating = \"TableResultTemplate-module--silverRating--8a669\";\nexport var table = \"TableResultTemplate-module--table--791de\";\nexport var tableBody = \"TableResultTemplate-module--tableBody--52900\";\nexport var tableHeader = \"TableResultTemplate-module--tableHeader--b84bb\";\nexport var tableRow = \"TableResultTemplate-module--tableRow--c2558\";\nexport var tagWidth = \"TableResultTemplate-module--tagWidth--3c99e\";\nexport var unknownCategory = \"TableResultTemplate-module--unknownCategory--a3e85\";\nexport var unknownLayer = \"TableResultTemplate-module--unknownLayer--0c621\";","import * as React from \"react\";\nimport * as styles from \"./TableResultTemplate.module.css\";\nimport _ from \"lodash\";\nimport { Icon, StatusBadge, DataBadge, Link } from \"@utrecht/component-library-react/dist/css-module\";\nimport { navigate } from \"gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport clsx from \"clsx\";\nimport { getResultsUrl } from \"../../../../services/getResultsUrl\";\nimport { getTypeFromSchemaRef } from \"../../../../services/getTypeFromSchemaRef\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faLayerGroup, faMedal } from \"@fortawesome/free-solid-svg-icons\";\nimport { TOOLTIP_ID } from \"../../../../layout/Layout\";\nimport { getStatusColor } from \"../../../../services/getStatusColor\";\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\nimport { RatingIndicatorTemplate } from \"../../ratingIndicator/RatingIndicatorTemplate\";\nimport { getCommongroundRating } from \"../../../../services/getCommongroundRating\";\n\ninterface TableResultTemplateProps {\n  components: any[];\n  hideTableHead?: boolean;\n}\n\nexport const TableResultTemplate: React.FC<TableResultTemplateProps> = ({ components, hideTableHead }) => {\n  const { t } = useTranslation();\n\n  return (\n    <HorizontalOverflowWrapper\n      ariaLabels={{ scrollLeftButton: t(\"Scroll left\"), scrollRightButton: t(\"Scroll right\") }}\n    >\n      <Table className={styles.table}>\n        {!hideTableHead && (\n          <TableHeader className={styles.tableHeader}>\n            <TableRow>\n              <TableHeaderCell>{t(\"Name\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Layer\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Software type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Status\")}</TableHeaderCell>\n              {window.sessionStorage.getItem(\"FILTER_RATING\") !== \"false\" && (\n                <TableHeaderCell>{t(\"Rating\")}</TableHeaderCell>\n              )}\n              <TableHeaderCell />\n            </TableRow>\n          </TableHeader>\n        )}\n\n        <TableBody className={styles.tableBody}>\n          {components.length > 0 &&\n            components.map((component) => (\n              <TableRow\n                className={styles.tableRow}\n                key={component.id}\n                onClick={() => navigate(`/${getResultsUrl(component._self?.schema.ref)}/${component.id}`)}\n              >\n                <TableCell>\n                  <span data-tooltip-id={TOOLTIP_ID} data-tooltip-content={component.name} className={styles.name}>\n                    {component.name}\n                  </span>\n                </TableCell>\n\n                <TableCell>{t(_.upperFirst(getTypeFromSchemaRef(component._self?.schema.ref)))}</TableCell>\n\n                <TableCell>\n                  <div\n                    className={clsx(\n                      styles[\n                        _.camelCase(\n                          t(\n                            `${\n                              (component._self.schema.ref.includes(\"component.schema.json\") &&\n                                component.embedded?.nl?.embedded?.commonground?.layerType) ??\n                              \"Unknown\"\n                            } layer`,\n                          ),\n                        )\n                      ],\n                    )}\n                  >\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content={t(\"Layer\")}\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faLayerGroup} />{\" \"}\n                      {t(\n                        _.upperFirst(\n                          component._self.schema.ref.includes(\"component.schema.json\")\n                            ? component.embedded?.nl?.embedded?.commonground?.layerType ?? t(\"Unknown\")\n                            : \"N.V.T.\",\n                        ),\n                      )}\n                    </DataBadge>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Component Type\">\n                    {t(\n                      _.upperFirst(\n                        component._self.schema.ref.includes(\"component.schema.json\")\n                          ? component.softwareType ?? \"Unknown\"\n                          : \"N.V.T.\",\n                      ),\n                    )}\n                  </DataBadge>\n                </TableCell>\n\n                <TableCell>\n                  <StatusBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Status\"\n                    status={getStatusColor(_.upperFirst(component.developmentStatus) ?? \"Onbekend\")}\n                    className={styles.tagWidth}\n                  >\n                    {component._self.schema.ref.includes(\"component.schema.json\") ? (\n                      <>\n                        <span className={styles.icon}>\n                          <FontAwesomeIcon icon={faInfoCircle} />\n                        </span>\n                        {t(_.upperFirst(component.developmentStatus ?? \"Unknown\"))}\n                      </>\n                    ) : (\n                      \"N.V.T.\"\n                    )}\n                  </StatusBadge>\n                </TableCell>\n\n                {window.sessionStorage.getItem(\"FILTER_RATING\") !== \"false\" &&\n                  window.sessionStorage.getItem(\"FILTER_RATING\") === \"OpenCatalogi\" && (\n                    <TableCell className={styles.ratingTableCell}>\n                      {component._self.schema.ref.includes(\"component.schema.json\") ? (\n                        component.embedded?.rating?.rating ? (\n                          <RatingIndicatorTemplate\n                            layoutClassName={styles.ratingIndicatorContainer}\n                            maxRating={component.embedded?.rating?.maxRating}\n                            rating={component.embedded?.rating?.rating}\n                          />\n                        ) : (\n                          t(\"No rating available\")\n                        )\n                      ) : (\n                        \"N.V.T.\"\n                      )}\n                    </TableCell>\n                  )}\n\n                {window.sessionStorage.getItem(\"FILTER_RATING\") !== \"false\" &&\n                  window.sessionStorage.getItem(\"FILTER_RATING\") === \"Commonground\" && (\n                    <TableCell>\n                      <DataBadge\n                        data-tooltip-id={TOOLTIP_ID}\n                        data-tooltip-content={t(\"Commonground rating\")}\n                        className={\n                          styles[\n                            _.camelCase(\n                              t(\n                                `${getCommongroundRating(\n                                  component.embedded?.nl?.embedded?.commonground?.rating ?? \"0\",\n                                )} rating`,\n                              ),\n                            )\n                          ]\n                        }\n                      >\n                        <FontAwesomeIcon icon={faMedal} />\n                        {t(getCommongroundRating(component.embedded?.nl?.embedded?.commonground?.rating))}\n                      </DataBadge>\n                    </TableCell>\n                  )}\n\n                <TableCell>\n                  <Link\n                    onClick={() => navigate(`/${getResultsUrl(component._self?.schema?.ref)}/${component.id}`)}\n                    className={styles.detailsLink}\n                  >\n                    <Icon>\n                      <IconArrowRight />\n                    </Icon>\n                    {t(\"Details\")}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n\n          {!components.length && (\n            <TableRow>\n              <TableCell>{t(\"Geen resultaten gevonden\")}</TableCell>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </HorizontalOverflowWrapper>\n  );\n};\n","export const getTypeFromSchemaRef = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"Organization\";\n  if (value.includes(\"component.schema.json\")) return \"Component\";\n  if (value.includes(\"application.schema.json\")) return \"Application\";\n  if (value.includes(\"contacts.schema.json\")) return \"Contact\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"Component legal Entity\";\n  if (value.includes(\"catalogi.schema.json\")) return \"Catalogi\";\n\n  //TODO add more values if we make more detail pages\n};\n","import * as React from \"react\";\nimport * as styles from \"./CardsResultTemplate.module.css\";\nimport { ComponentCard } from \"../../../../components/componentCard/ComponentCard\";\nimport { OrganizationCard } from \"../../../../components/organizationCard/OrganizationCard\";\nimport { ApplicationCard } from \"../../../../components/applicationCard/ApplicationCard\";\nimport { Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\n\ninterface CardsResultTemplateProps {\n  components: any[];\n}\n\nexport const CardsResultTemplate: React.FC<CardsResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self;\n  });\n\n  const noResultFound = _components.every((component) => {\n    return (\n      !component._self.schema.ref.includes(\"component.schema.json\") &&\n      !component._self.schema.ref.includes(\"organisation.schema.json\") &&\n      !component._self.schema.ref.includes(\"application.schema.json\")\n    );\n  });\n\n  if (noResultFound) return <Paragraph>Geen resultaten gevonden.</Paragraph>;\n\n  return (\n    <div className={styles.ComponentsGrid}>\n      {_components.map((component) => (\n        <React.Fragment key={component.id}>\n          {component._self.schema.ref.includes(\"organisation.schema.json\") && (\n            <OrganizationCard\n              key={component.id}\n              title={{\n                label: component.name,\n                href: `/organizations/${component.id}`,\n              }}\n              description={component.description}\n              website={component.website}\n              logo={component.logo}\n              components={{\n                owned: component.owns?.length.toString() ?? \"0\",\n                supported: component.supports?.length.toString() ?? \"0\",\n                used: component.uses?.length.toString() ?? \"0\",\n              }}\n              gitHub={component.github}\n              gitLab={component.gitlab}\n              type={component.type}\n            />\n          )}\n          {component._self.schema.ref.includes(\"component.schema.json\") && (\n            <ComponentCard\n              key={component.id}\n              title={{ label: component.name, href: `/components/${component.id}` }}\n              description={component.embedded.description?.shortDescription}\n              layer={component.embedded.nl?.embedded?.commonground?.layerType ?? \"Unknown\"}\n              categories={component.categories}\n              tags={{\n                rating: {\n                  rating: component.embedded?.rating?.rating,\n                  maxRating: component.embedded?.rating?.maxRating,\n                },\n                ratingCommonground: {\n                  rating: component.embedded?.nl?.embedded?.commonground?.rating,\n                },\n                status: component.developmentStatus,\n                installations: component.usedBy?.length.toString() ?? \"0\",\n                organization: {\n                  name: component.embedded?.url?.embedded?.organisation?.name,\n                  website: component.embedded?.url?.embedded?.organisation?.website,\n                },\n                licence: component.embedded?.legal?.license,\n                githubLink: component.embedded?.url?.url,\n              }}\n            />\n          )}\n          {component._self.schema.ref.includes(\"application.schema.json\") && (\n            <ApplicationCard\n              key={component.id}\n              title={{ label: component.name, href: `/applications/${component.id}` }}\n              description={component.shortDescription}\n              tags={{\n                organization: component?.embedded?.owner?.fullName,\n                githubLink: component?.demoUrl,\n              }}\n            />\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentsGrid = \"CardsResultTemplate-module--ComponentsGrid--46d3c\";","import * as React from \"react\";\nimport { ComponentCardsAccordionTemplate } from \"../../componentCardsAccordion/ComponentCardsAccordionTemplate\";\n\ninterface LayersResultTemplateProps {\n  components: any[];\n}\n\nexport const LayersResultTemplate: React.FC<LayersResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self.schema.ref.includes(\"component.schema.json\");\n  });\n\n  return <ComponentCardsAccordionTemplate components={_components} />;\n};\n","import * as React from \"react\";\nimport { TComponentResultsLayout } from \"../../../context/resultDisplayLayout\";\nimport { TableResultTemplate } from \"./table/TableResultTemplate\";\nimport { CardsResultTemplate } from \"./cards/CardsResultTemplate\";\nimport { LayersResultTemplate } from \"./layers/LayersResultTemplate\";\n\ninterface ComponentResultsTemplateProps {\n  type: TComponentResultsLayout;\n  components: any[];\n}\n\nexport const ComponentResultTemplate: React.FC<ComponentResultsTemplateProps> = ({ components, type }) => {\n  switch (type) {\n    case \"table\":\n      return <TableResultTemplate {...{ components }} />;\n\n    case \"cards\":\n      return <CardsResultTemplate {...{ components }} />;\n\n    case \"layer\":\n      return <LayersResultTemplate {...{ components }} />;\n  }\n};\n"],"names":["getResultsUrl","value","includes","bronzeRating","dataCategory","dataLayer","detailsLink","goldRating","icon","integrationCategory","integrationLayer","interactionCategory","interactionLayer","interfaceCategory","interfaceLayer","procesCategory","processCategory","processLayer","processsLayer","ratingIndicatorContainer","ratingTableCell","serviceCategory","serviceLayer","servicesCategory","servicesLayer","silverRating","table","tableBody","tableHeader","tableRow","tagWidth","unknownCategory","unknownLayer","TableResultTemplate","_ref","components","hideTableHead","t","useTranslation","_jsx","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","children","_jsxs","Table","className","styles","TableHeader","TableRow","TableHeaderCell","window","sessionStorage","getItem","TableBody","length","map","component","_component$_self2","_ref2","_component$embedded","_component$embedded$n","_component$embedded$n2","_component$embedded$n3","_component$embedded$n4","_component$embedded2","_component$embedded2$","_component$embedded2$2","_component$embedded2$3","_component$softwareTy","_upperFirst2","_component$developmen","_component$embedded3","_component$embedded3$","_component$embedded4","_component$embedded4$","_component$embedded5","_component$embedded5$","_component$embedded$n5","_component$embedded6","_component$embedded6$","_component$embedded6$2","_component$embedded6$3","_component$embedded7","_component$embedded7$","_component$embedded7$2","_component$embedded7$3","onClick","_component$_self","navigate","_self","schema","ref","id","TableCell","TOOLTIP_ID","name","_upperFirst","clsx","_camelCase","embedded","nl","commonground","layerType","DataBadge","FontAwesomeIcon","faLayerGroup","softwareType","StatusBadge","status","getStatusColor","developmentStatus","_Fragment","faInfoCircle","rating","RatingIndicatorTemplate","layoutClassName","maxRating","getCommongroundRating","faMedal","Link","_component$_self3","_component$_self3$sch","Icon","IconArrowRight","CardsResultTemplate","_components","filter","every","Paragraph","_component$owns$lengt","_component$owns","_component$supports$l","_component$supports","_component$uses$lengt","_component$uses","_component$embedded$d","_component$embedded$r","_component$embedded3$2","_component$embedded3$3","_component$usedBy$len","_component$usedBy","_component$embedded4$2","_component$embedded4$3","_component$embedded5$2","_component$embedded5$3","_component$embedded8","_component$embedded8$","React","OrganizationCard","title","label","href","description","website","logo","owned","owns","toString","supported","supports","used","uses","gitHub","github","gitLab","gitlab","type","ComponentCard","shortDescription","layer","categories","tags","ratingCommonground","installations","usedBy","organization","url","organisation","licence","legal","license","githubLink","ApplicationCard","owner","fullName","demoUrl","LayersResultTemplate","ComponentCardsAccordionTemplate","ComponentResultTemplate"],"sourceRoot":""}