{"version":3,"file":"6cf082646fc02a7572ed7969eb3677e973ce7868-acaa962467c379126b8c.js","mappings":"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","sources":["webpack://skeleton-pip/./src/assets/svgs/GitLab.tsx","webpack://skeleton-pip/./src/components/applicationCard/ApplicationCard.module.css","webpack://skeleton-pip/./src/components/applicationCard/ApplicationCard.tsx","webpack://skeleton-pip/./src/components/organizationCard/OrganizationCard.tsx","webpack://skeleton-pip/./src/components/organizationCard/OrganizationCard.module.css","webpack://skeleton-pip/./src/services/getResultsUrl.ts","webpack://skeleton-pip/./src/services/getStatusColor.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.tsx","webpack://skeleton-pip/./src/services/getTypeFromSchemaRef.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/layers/LayersResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/ComponentResultsTemplate.tsx"],"sourcesContent":["import * as React from \"react\";\n\nexport const GitLabLogo: React.FC = () => (\n  <svg width=\"15px\" height=\"14px\" viewBox=\"0 0 15 14\" version=\"1.1\">\n    <g id=\"Page-1\" stroke=\"none\" strokeWidth=\"1\" fill=\"none\" fillRule=\"evenodd\">\n      <g id=\"Group\" fill=\"currentColor\" fillRule=\"nonzero\">\n        <path\n          d=\"M7.5,13.9470014 L0.234193398,8.55590423 C0.140051139,8.48152022 0.0691538819,8.38156671 0.030218503,8.26708508 L0.0290562529,8.26243608 C0.010460251,8.21013482 2.82265559e-16,8.15027894 2.82265559e-16,8.08751743 C2.82265559e-16,8.02475593 0.010460251,7.96490005 0.030218503,7.90853092 L0.0290562529,7.91259879 L0.879242213,5.33414691 L7.5,13.9470014 Z M3.07589493,0.205718271 L4.74604835,5.33298466 L0.878661088,5.33298466 L2.51917713,0.205718271 C2.55985588,0.0854253835 2.67201302,0.000581125058 2.80392841,0.000581125058 L2.81264528,0.000581125058 L2.81206416,0.000581125058 C2.81671316,0.000581125058 2.82194328,-4.51624894e-16 2.82717341,-4.51624894e-16 C2.95037192,-4.51624894e-16 3.05264993,0.0877498838 3.07531381,0.203974895 L3.07531381,0.205718271 L3.07589493,0.205718271 Z M4.74604835,5.33298466 L10.2545328,5.33298466 L7.50058113,13.9470014 L4.74604835,5.33298466 Z M14.9709437,7.91085542 C14.9895397,7.96315667 15,8.02301255 15,8.08577406 C15,8.14853556 14.9895397,8.20839145 14.9697815,8.26476058 L14.9709437,8.2606927 C14.9308461,8.37982334 14.8599489,8.47919572 14.7669689,8.55299861 L14.7658066,8.55416086 L7.5,13.9470014 L14.1213389,5.33298466 L14.9709437,7.91085542 Z M12.4808229,0.205718271 L14.1213389,5.33298466 L10.2539517,5.33298466 L11.9241051,0.205718271 C11.9473501,0.0877498838 12.0496281,-4.51624894e-16 12.1728266,-4.51624894e-16 C12.1780567,-4.51624894e-16 12.1832868,-4.51624894e-16 12.188517,0.000581125058 L12.1879358,0.000581125058 L12.1960716,0.000581125058 C12.327987,0.000581125058 12.439563,0.0854253835 12.4802417,0.20339377 L12.4808229,0.205718271 Z\"\n          id=\"Shape\"\n        ></path>\n      </g>\n    </g>\n  </svg>\n);\n","// extracted by mini-css-extract-plugin\nexport var cardHeader = \"ApplicationCard-module--cardHeader--4aa85\";\nexport var container = \"ApplicationCard-module--container--af780\";\nexport var description = \"ApplicationCard-module--description--e916e\";\nexport var tags = \"ApplicationCard-module--tags--3a901\";\nexport var titleLink = \"ApplicationCard-module--titleLink--5e3d5\";","import * as React from \"react\";\nimport * as styles from \"./ApplicationCard.module.css\";\nimport clsx from \"clsx\";\nimport { DataBadge, Icon, Link, Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\nimport { useTranslation } from \"react-i18next\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHouse, faLaptopCode } from \"@fortawesome/free-solid-svg-icons\";\nimport { TOOLTIP_ID } from \"../../layout/Layout\";\nimport { CardHeader, CardHeaderTitle, CardWrapper } from \"@conduction/components\";\nimport { navigate } from \"gatsby-link\";\n\nexport interface ApplicationCardProps {\n  title: {\n    label: string;\n    href: string;\n  };\n  description: string;\n  tags: {\n    organization?: string;\n    githubLink?: string;\n  };\n  layoutClassName?: string;\n}\n\nexport const ApplicationCard: React.FC<ApplicationCardProps> = ({ title, description, tags, layoutClassName }) => {\n  const { t } = useTranslation();\n\n  return (\n    <CardWrapper\n      className={clsx([styles.container, layoutClassName && layoutClassName])}\n      onClick={() => navigate(title.href)}\n    >\n      <CardHeader className={styles.cardHeader}>\n        <CardHeaderTitle>\n          <Link className={styles.titleLink} onClick={() => navigate(title.href)}>\n            <Icon>\n              <IconArrowRight />\n            </Icon>\n            {title.label}\n          </Link>\n        </CardHeaderTitle>\n      </CardHeader>\n      <Paragraph className={styles.description}>{description}</Paragraph>\n\n      <div className={styles.tags}>\n        {tags.organization && (\n          <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Organisatie\">\n            <FontAwesomeIcon icon={faHouse} />\n            {tags.organization}\n          </DataBadge>\n        )}\n        {tags.githubLink && (\n          <DataBadge\n            data-tooltip-id={TOOLTIP_ID}\n            data-tooltip-content=\"Demo\"\n            onClick={(e) => {\n              e.stopPropagation();\n              open(tags.githubLink);\n            }}\n          >\n            <FontAwesomeIcon icon={faLaptopCode} />\n            {t(\"Demo\")}\n          </DataBadge>\n        )}\n      </div>\n    </CardWrapper>\n  );\n};\n","import * as React from \"react\";\nimport * as styles from \"./OrganizationCard.module.css\";\nimport { DataBadge, Icon, Link, Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\nimport { navigate } from \"gatsby\";\nimport _ from \"lodash\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport { useTranslation } from \"react-i18next\";\nimport clsx from \"clsx\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBuilding, faGlobe, faHouseLaptop, faRepeat, faUserCog } from \"@fortawesome/free-solid-svg-icons\";\nimport { GitHubLogo } from \"../../assets/svgs/GitHub\";\nimport { GitLabLogo } from \"../../assets/svgs/GitLab\";\nimport { TOOLTIP_ID } from \"../../layout/Layout\";\nimport { CardHeader, CardHeaderTitle, CardWrapper } from \"@conduction/components\";\n\nexport interface OrganizationCardProps {\n  title: {\n    label: string;\n    href: string;\n  };\n  description?: string;\n  website?: string;\n  logo?: string;\n  type?: string;\n  components: {\n    owned: string;\n    supported: string;\n    used: string;\n  };\n  gitHub?: string;\n  gitLab?: string;\n  layoutClassName?: string;\n}\n\nexport const OrganizationCard: React.FC<OrganizationCardProps> = ({\n  title,\n  description,\n  website,\n  logo,\n  type,\n  components,\n  gitHub,\n  gitLab,\n  layoutClassName,\n}) => {\n  const { t } = useTranslation();\n\n  return (\n    <CardWrapper\n      className={clsx([styles.container, layoutClassName && layoutClassName])}\n      onClick={() => navigate(title.href)}\n    >\n      <CardHeader className={styles.header}>\n        <div className={styles.headerContent}>\n          <CardHeaderTitle>\n            <Link className={styles.titleLink} onClick={() => navigate(title.href)}>\n              <Icon>\n                <IconArrowRight />\n              </Icon>\n              {title.label}\n            </Link>\n          </CardHeaderTitle>\n\n          <Paragraph className={styles.description}>{description}</Paragraph>\n        </div>\n\n        {logo && (\n          <div className={styles.logoContainer}>\n            <img className={styles.logo} onClick={() => navigate(title.href)} src={logo} />\n          </div>\n        )}\n      </CardHeader>\n\n      <div className={styles.tagsContainer}>\n        <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Organisatie type\">\n          <FontAwesomeIcon icon={faBuilding} />\n\n          {t(_.upperFirst(type ? type : \"Unknown\"))}\n        </DataBadge>\n\n        <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Aantal eigen componenten\">\n          <FontAwesomeIcon icon={faHouseLaptop} />\n          {components.owned}\n        </DataBadge>\n\n        <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Aantal ondersteunde componenten\">\n          <FontAwesomeIcon icon={faUserCog} />\n          {components.supported}\n        </DataBadge>\n\n        <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Aantal gebruikte componenten\">\n          <FontAwesomeIcon icon={faRepeat} />\n          {components.used}\n        </DataBadge>\n\n        {website && (\n          <DataBadge\n            data-tooltip-id={TOOLTIP_ID}\n            data-tooltip-content={website}\n            onClick={(e) => {\n              e.stopPropagation();\n              open(website);\n            }}\n          >\n            <FontAwesomeIcon icon={faGlobe} />\n            Website\n          </DataBadge>\n        )}\n\n        {gitHub && (\n          <DataBadge\n            data-tooltip-id={TOOLTIP_ID}\n            data-tooltip-content=\"GitHub\"\n            onClick={(e) => {\n              e.stopPropagation();\n              open(gitHub);\n            }}\n          >\n            <GitHubLogo />\n            {t(\"GitHub\")}\n          </DataBadge>\n        )}\n\n        {gitLab && (\n          <DataBadge\n            data-tooltip-id={TOOLTIP_ID}\n            data-tooltip-content=\"GitLab\"\n            onClick={(e) => {\n              e.stopPropagation();\n              open(gitLab);\n            }}\n          >\n            <GitLabLogo />\n            {t(\"GitLab\")}\n          </DataBadge>\n        )}\n      </div>\n    </CardWrapper>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var container = \"OrganizationCard-module--container--d845a\";\nexport var description = \"OrganizationCard-module--description--6368c\";\nexport var header = \"OrganizationCard-module--header--1a9d6\";\nexport var headerContent = \"OrganizationCard-module--headerContent--d7526\";\nexport var logo = \"OrganizationCard-module--logo--8c99c\";\nexport var logoContainer = \"OrganizationCard-module--logoContainer--ae726\";\nexport var tagsContainer = \"OrganizationCard-module--tagsContainer--10cd4\";\nexport var titleLink = \"OrganizationCard-module--titleLink--59ed4\";","export const getResultsUrl = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"organizations\";\n  if (value.includes(\"component.schema.json\")) return \"components\";\n  if (value.includes(\"application.schema.json\")) return \"applications\";\n  if (value.includes(\"contacts.schema.json\")) return \"contacts\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"componentlegalentities\";\n\n  //TODO add more values if we make more detail pages\n};\n","export const getStatusColor = (status: string): string => {\r\n  switch (status) {\r\n    case \"Concept\":\r\n      return \"warning\";\r\n    case \"Development\":\r\n      return \"warning\";\r\n    case \"Beta\":\r\n      return \"warning\";\r\n    case \"Bruikbaar\":\r\n      return \"safe\";\r\n    case \"Stable\":\r\n      return \"safe\";\r\n    case \"Obsolete\":\r\n      return \"danger\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var bronzeRating = \"TableResultTemplate-module--bronzeRating--35242\";\nexport var dataCategory = \"TableResultTemplate-module--dataCategory--3b1ef\";\nexport var dataLayer = \"TableResultTemplate-module--dataLayer--08c4e\";\nexport var detailsLink = \"TableResultTemplate-module--detailsLink--5c419\";\nexport var goldRating = \"TableResultTemplate-module--goldRating--bb4fe\";\nexport var icon = \"TableResultTemplate-module--icon--3748e\";\nexport var integrationCategory = \"TableResultTemplate-module--integrationCategory--c30df\";\nexport var integrationLayer = \"TableResultTemplate-module--integrationLayer--d5e43\";\nexport var interactionCategory = \"TableResultTemplate-module--interactionCategory--33b43\";\nexport var interactionLayer = \"TableResultTemplate-module--interactionLayer--e787a\";\nexport var interfaceCategory = \"TableResultTemplate-module--interfaceCategory--1f672\";\nexport var interfaceLayer = \"TableResultTemplate-module--interfaceLayer--eaa6a\";\nexport var name = \"TableResultTemplate-module--name--6b85e\";\nexport var procesCategory = \"TableResultTemplate-module--procesCategory--5a2fc\";\nexport var processCategory = \"TableResultTemplate-module--processCategory--50b3a\";\nexport var processLayer = \"TableResultTemplate-module--processLayer--359ae\";\nexport var processsLayer = \"TableResultTemplate-module--processsLayer--150d4\";\nexport var ratingIndicatorContainer = \"TableResultTemplate-module--ratingIndicatorContainer--d7764\";\nexport var ratingTableCell = \"TableResultTemplate-module--ratingTableCell--84a55\";\nexport var serviceCategory = \"TableResultTemplate-module--serviceCategory--1a87c\";\nexport var serviceLayer = \"TableResultTemplate-module--serviceLayer--19304\";\nexport var servicesCategory = \"TableResultTemplate-module--servicesCategory--cf685\";\nexport var servicesLayer = \"TableResultTemplate-module--servicesLayer--5d508\";\nexport var silverRating = \"TableResultTemplate-module--silverRating--8a669\";\nexport var table = \"TableResultTemplate-module--table--791de\";\nexport var tableBody = \"TableResultTemplate-module--tableBody--52900\";\nexport var tableHeader = \"TableResultTemplate-module--tableHeader--b84bb\";\nexport var tableRow = \"TableResultTemplate-module--tableRow--c2558\";\nexport var tagWidth = \"TableResultTemplate-module--tagWidth--3c99e\";\nexport var unknownCategory = \"TableResultTemplate-module--unknownCategory--a3e85\";\nexport var unknownLayer = \"TableResultTemplate-module--unknownLayer--0c621\";","import * as React from \"react\";\nimport * as styles from \"./TableResultTemplate.module.css\";\nimport _ from \"lodash\";\nimport { Icon, StatusBadge, DataBadge, Link } from \"@utrecht/component-library-react/dist/css-module\";\nimport { navigate } from \"gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport clsx from \"clsx\";\nimport { getResultsUrl } from \"../../../../services/getResultsUrl\";\nimport { getTypeFromSchemaRef } from \"../../../../services/getTypeFromSchemaRef\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faLayerGroup, faMedal } from \"@fortawesome/free-solid-svg-icons\";\nimport { TOOLTIP_ID } from \"../../../../layout/Layout\";\nimport { getStatusColor } from \"../../../../services/getStatusColor\";\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\nimport { RatingIndicatorTemplate } from \"../../ratingIndicator/RatingIndicatorTemplate\";\nimport { getCommongroundRating } from \"../../../../services/getCommongroundRating\";\n\ninterface TableResultTemplateProps {\n  components: any[];\n  hideTableHead?: boolean;\n}\n\nexport const TableResultTemplate: React.FC<TableResultTemplateProps> = ({ components, hideTableHead }) => {\n  const { t } = useTranslation();\n\n  return (\n    <HorizontalOverflowWrapper\n      ariaLabels={{ scrollLeftButton: t(\"Scroll left\"), scrollRightButton: t(\"Scroll right\") }}\n    >\n      <Table className={styles.table}>\n        {!hideTableHead && (\n          <TableHeader className={styles.tableHeader}>\n            <TableRow>\n              <TableHeaderCell>{t(\"Name\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Layer\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Software type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Status\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Rating\")}</TableHeaderCell>\n              <TableHeaderCell />\n            </TableRow>\n          </TableHeader>\n        )}\n\n        <TableBody className={styles.tableBody}>\n          {components.length > 0 &&\n            components.map((component) => (\n              <TableRow\n                className={styles.tableRow}\n                key={component.id}\n                onClick={() => navigate(`/${getResultsUrl(component._self?.schema.ref)}/${component.id}`)}\n              >\n                <TableCell>\n                  <span data-tooltip-id={TOOLTIP_ID} data-tooltip-content={component.name} className={styles.name}>\n                    {component.name}\n                  </span>\n                </TableCell>\n\n                <TableCell>{t(_.upperFirst(getTypeFromSchemaRef(component._self?.schema.ref)))}</TableCell>\n\n                <TableCell>\n                  <div\n                    className={clsx(\n                      styles[\n                        _.camelCase(\n                          t(\n                            `${\n                              (component._self.schema.ref.includes(\"component.schema.json\") &&\n                                component.embedded?.nl?.embedded?.commonground?.layerType) ??\n                              \"Unknown\"\n                            } layer`,\n                          ),\n                        )\n                      ],\n                    )}\n                  >\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content={t(\"Layer\")}\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faLayerGroup} />{\" \"}\n                      {t(\n                        _.upperFirst(\n                          component._self.schema.ref.includes(\"component.schema.json\")\n                            ? component.embedded?.nl?.embedded?.commonground?.layerType ?? t(\"Unknown\")\n                            : \"N.V.T.\",\n                        ),\n                      )}\n                    </DataBadge>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Component Type\">\n                    {_.upperFirst(\n                      component._self.schema.ref.includes(\"component.schema.json\")\n                        ? component.softwareType ?? \"Onbekend\"\n                        : \"N.V.T.\",\n                    )}\n                  </DataBadge>\n                </TableCell>\n\n                <TableCell>\n                  <StatusBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Status\"\n                    status={getStatusColor(_.upperFirst(component.developmentStatus) ?? \"Onbekend\")}\n                    className={styles.tagWidth}\n                  >\n                    {component._self.schema.ref.includes(\"component.schema.json\") ? (\n                      <>\n                        <span className={styles.icon}>\n                          <FontAwesomeIcon icon={faInfoCircle} />\n                        </span>\n                        {_.upperFirst(component.developmentStatus ?? \"Onbekend\")}\n                      </>\n                    ) : (\n                      \"N.V.T.\"\n                    )}\n                  </StatusBadge>\n                </TableCell>\n\n                {window.sessionStorage.getItem(\"FILTER_RATING\") === \"OpenCatalogi\" && (\n                  <TableCell className={styles.ratingTableCell}>\n                    {component._self.schema.ref.includes(\"component.schema.json\") ? (\n                      component.embedded?.rating?.rating ? (\n                        <RatingIndicatorTemplate\n                          layoutClassName={styles.ratingIndicatorContainer}\n                          maxRating={component.embedded?.rating?.maxRating}\n                          rating={component.embedded?.rating?.rating}\n                        />\n                      ) : (\n                        t(\"No rating available\")\n                      )\n                    ) : (\n                      \"N.V.T.\"\n                    )}\n                  </TableCell>\n                )}\n\n                {window.sessionStorage.getItem(\"FILTER_RATING\") === \"Commonground\" && (\n                  <TableCell>\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content={t(\"Commonground rating\")}\n                      className={\n                        styles[\n                          _.camelCase(\n                            t(\n                              `${getCommongroundRating(\n                                component.embedded?.nl?.embedded?.commonground?.rating ?? \"0\",\n                              )} rating`,\n                            ),\n                          )\n                        ]\n                      }\n                    >\n                      <FontAwesomeIcon icon={faMedal} />\n                      {t(getCommongroundRating(component.embedded?.nl?.embedded?.commonground?.rating))}\n                    </DataBadge>\n                  </TableCell>\n                )}\n\n                <TableCell>\n                  <Link\n                    onClick={() => navigate(`/${getResultsUrl(component._self?.schema?.ref)}/${component.id}`)}\n                    className={styles.detailsLink}\n                  >\n                    <Icon>\n                      <IconArrowRight />\n                    </Icon>\n                    {t(\"Details\")}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n\n          {!components.length && (\n            <TableRow>\n              <TableCell>{t(\"Geen resultaten gevonden\")}</TableCell>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </HorizontalOverflowWrapper>\n  );\n};\n","export const getTypeFromSchemaRef = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"Organization\";\n  if (value.includes(\"component.schema.json\")) return \"Component\";\n  if (value.includes(\"application.schema.json\")) return \"Application\";\n  if (value.includes(\"contacts.schema.json\")) return \"Contact\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"Component legal Entity\";\n  if (value.includes(\"catalogi.schema.json\")) return \"Catalogi\";\n\n  //TODO add more values if we make more detail pages\n};\n","import * as React from \"react\";\nimport * as styles from \"./CardsResultTemplate.module.css\";\nimport { ComponentCard } from \"../../../../components/componentCard/ComponentCard\";\nimport { OrganizationCard } from \"../../../../components/organizationCard/OrganizationCard\";\nimport { ApplicationCard } from \"../../../../components/applicationCard/ApplicationCard\";\nimport { Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\n\ninterface CardsResultTemplateProps {\n  components: any[];\n}\n\nexport const CardsResultTemplate: React.FC<CardsResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self;\n  });\n\n  const noResultFound = _components.every((component) => {\n    return (\n      !component._self.schema.ref.includes(\"component.schema.json\") &&\n      !component._self.schema.ref.includes(\"organisation.schema.json\") &&\n      !component._self.schema.ref.includes(\"application.schema.json\")\n    );\n  });\n\n  if (noResultFound) return <Paragraph>Geen resultaten gevonden.</Paragraph>;\n\n  return (\n    <div className={styles.ComponentsGrid}>\n      {_components.map((component) => (\n        <React.Fragment key={component.id}>\n          {component._self.schema.ref.includes(\"organisation.schema.json\") && (\n            <OrganizationCard\n              key={component.id}\n              title={{\n                label: component.name,\n                href: `/organizations/${component.id}`,\n              }}\n              description={component.description}\n              website={component.website}\n              logo={component.logo}\n              components={{\n                owned: component.owns?.length.toString() ?? \"0\",\n                supported: component.supports?.length.toString() ?? \"0\",\n                used: component.uses?.length.toString() ?? \"0\",\n              }}\n              gitHub={component.github}\n              gitLab={component.gitlab}\n              type={component.type}\n            />\n          )}\n          {component._self.schema.ref.includes(\"component.schema.json\") && (\n            <ComponentCard\n              key={component.id}\n              title={{ label: component.name, href: `/components/${component.id}` }}\n              description={component.embedded.description?.shortDescription}\n              layer={component.embedded.nl?.embedded?.commonground?.layerType ?? \"Unknown\"}\n              categories={component.categories}\n              tags={{\n                rating: {\n                  rating: component.embedded?.rating?.rating,\n                  maxRating: component.embedded?.rating?.maxRating,\n                },\n                ratingCommonground: {\n                  rating: component.embedded?.nl?.embedded?.commonground?.rating,\n                },\n                status: component.developmentStatus,\n                installations: component.usedBy?.length.toString() ?? \"0\",\n                organization: {\n                  name: component.embedded?.url?.embedded?.organisation?.name,\n                  website: component.embedded?.url?.embedded?.organisation?.website,\n                },\n                licence: component.embedded?.legal?.license,\n                githubLink: component.embedded?.url?.url,\n              }}\n            />\n          )}\n          {component._self.schema.ref.includes(\"application.schema.json\") && (\n            <ApplicationCard\n              key={component.id}\n              title={{ label: component.name, href: `/applications/${component.id}` }}\n              description={component.shortDescription}\n              tags={{\n                organization: component?.embedded?.owner?.fullName,\n                githubLink: component?.demoUrl,\n              }}\n            />\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentsGrid = \"CardsResultTemplate-module--ComponentsGrid--46d3c\";","import * as React from \"react\";\nimport { ComponentCardsAccordionTemplate } from \"../../componentCardsAccordion/ComponentCardsAccordionTemplate\";\n\ninterface LayersResultTemplateProps {\n  components: any[];\n}\n\nexport const LayersResultTemplate: React.FC<LayersResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self.schema.ref.includes(\"component.schema.json\");\n  });\n\n  return <ComponentCardsAccordionTemplate components={_components} />;\n};\n","import * as React from \"react\";\nimport { TComponentResultsLayout } from \"../../../context/resultDisplayLayout\";\nimport { TableResultTemplate } from \"./table/TableResultTemplate\";\nimport { CardsResultTemplate } from \"./cards/CardsResultTemplate\";\nimport { LayersResultTemplate } from \"./layers/LayersResultTemplate\";\n\ninterface ComponentResultsTemplateProps {\n  type: TComponentResultsLayout;\n  components: any[];\n}\n\nexport const ComponentResultTemplate: React.FC<ComponentResultsTemplateProps> = ({ components, type }) => {\n  switch (type) {\n    case \"table\":\n      return <TableResultTemplate {...{ components }} />;\n\n    case \"cards\":\n      return <CardsResultTemplate {...{ components }} />;\n\n    case \"layer\":\n      return <LayersResultTemplate {...{ components }} />;\n  }\n};\n"],"names":["GitLabLogo","_jsx","width","height","viewBox","version","children","id","stroke","strokeWidth","fill","fillRule","d","ApplicationCard","_ref","title","description","tags","layoutClassName","t","useTranslation","_jsxs","CardWrapper","className","clsx","onClick","navigate","href","CardHeader","CardHeaderTitle","Link","Icon","IconArrowRight","label","Paragraph","organization","DataBadge","TOOLTIP_ID","FontAwesomeIcon","icon","faHouse","githubLink","e","stopPropagation","open","faLaptopCode","OrganizationCard","website","logo","type","components","gitHub","gitLab","src","faBuilding","_upperFirst","faHouseLaptop","owned","faUserCog","supported","faRepeat","used","faGlobe","GitHubLogo","getResultsUrl","value","includes","getStatusColor","status","bronzeRating","dataCategory","dataLayer","detailsLink","goldRating","integrationCategory","integrationLayer","interactionCategory","interactionLayer","interfaceCategory","interfaceLayer","procesCategory","processCategory","processLayer","processsLayer","ratingIndicatorContainer","ratingTableCell","serviceCategory","serviceLayer","servicesCategory","servicesLayer","silverRating","table","tableBody","tableHeader","tableRow","tagWidth","unknownCategory","unknownLayer","TableResultTemplate","hideTableHead","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","styles","TableHeader","TableRow","TableHeaderCell","TableBody","length","map","component","_component$_self2","_ref2","_component$embedded","_component$embedded$n","_component$embedded$n2","_component$embedded$n3","_component$embedded$n4","_component$embedded2","_component$embedded2$","_component$embedded2$2","_component$embedded2$3","_component$softwareTy","_upperFirst2","_component$developmen","_component$embedded3","_component$embedded3$","_component$embedded4","_component$embedded4$","_component$embedded5","_component$embedded5$","_component$embedded$n5","_component$embedded6","_component$embedded6$","_component$embedded6$2","_component$embedded6$3","_component$embedded7","_component$embedded7$","_component$embedded7$2","_component$embedded7$3","_component$_self","_self","schema","ref","TableCell","name","_camelCase","embedded","nl","commonground","layerType","faLayerGroup","softwareType","StatusBadge","developmentStatus","_Fragment","faInfoCircle","window","sessionStorage","getItem","rating","RatingIndicatorTemplate","maxRating","getCommongroundRating","faMedal","_component$_self3","_component$_self3$sch","CardsResultTemplate","_components","filter","every","_component$owns$lengt","_component$owns","_component$supports$l","_component$supports","_component$uses$lengt","_component$uses","_component$embedded$d","_component$embedded$r","_component$embedded3$2","_component$embedded3$3","_component$usedBy$len","_component$usedBy","_component$embedded4$2","_component$embedded4$3","_component$embedded5$2","_component$embedded5$3","_component$embedded8","_component$embedded8$","React","owns","toString","supports","uses","github","gitlab","ComponentCard","shortDescription","layer","categories","ratingCommonground","installations","usedBy","url","organisation","licence","legal","license","owner","fullName","demoUrl","LayersResultTemplate","ComponentCardsAccordionTemplate","ComponentResultTemplate"],"sourceRoot":""}