{"version":3,"file":"component---src-pages-applications-index-tsx-2ec5820490efdb8790ba.js","mappings":"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","sources":["webpack://skeleton-pip/./node_modules/react-loading-skeleton/dist/index.js","webpack://skeleton-pip/./src/hooks/applications.ts","webpack://skeleton-pip/./src/templates/applicationsTemplate/ApplicationsTemplate.tsx","webpack://skeleton-pip/./src/templates/applicationsTemplate/ApplicationsTemplate.module.css","webpack://skeleton-pip/./src/pages/applications/ApplicationsPage.tsx","webpack://skeleton-pip/./src/pages/applications/index.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties(_ref) {\n  let {\n    baseColor,\n    highlightColor,\n    width,\n    height,\n    borderRadius,\n    circle,\n    direction,\n    duration,\n    enableAnimation = defaultEnableAnimation\n  } = _ref;\n  const style = {};\n  if (direction === 'rtl') style['--animation-direction'] = 'reverse';\n  if (typeof duration === 'number') style['--animation-duration'] = `${duration}s`;\n  if (!enableAnimation) style['--pseudo-element-display'] = 'none';\n  if (typeof width === 'string' || typeof width === 'number') style.width = width;\n  if (typeof height === 'string' || typeof height === 'number') style.height = height;\n  if (typeof borderRadius === 'string' || typeof borderRadius === 'number') style.borderRadius = borderRadius;\n  if (circle) style.borderRadius = '50%';\n  if (typeof baseColor !== 'undefined') style['--base-color'] = baseColor;\n  if (typeof highlightColor !== 'undefined') style['--highlight-color'] = highlightColor;\n  return style;\n}\nfunction Skeleton(_ref2) {\n  let {\n    count = 1,\n    wrapper: Wrapper,\n    className: customClassName,\n    containerClassName,\n    containerTestId,\n    circle = false,\n    style: styleProp,\n    ...originalPropsStyleOptions\n  } = _ref2;\n  var _a, _b, _c;\n  const contextStyleOptions = React.useContext(SkeletonThemeContext);\n  const propsStyleOptions = {\n    ...originalPropsStyleOptions\n  };\n  // DO NOT overwrite style options from the context if `propsStyleOptions`\n  // has properties explicity set to undefined\n  for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n    if (typeof value === 'undefined') {\n      delete propsStyleOptions[key];\n    }\n  }\n  // Props take priority over context\n  const styleOptions = {\n    ...contextStyleOptions,\n    ...propsStyleOptions,\n    circle\n  };\n  // `styleProp` has the least priority out of everything\n  const style = {\n    ...styleProp,\n    ...styleOptionsToCssProperties(styleOptions)\n  };\n  let className = 'react-loading-skeleton';\n  if (customClassName) className += ` ${customClassName}`;\n  const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n  const elements = [];\n  const countCeil = Math.ceil(count);\n  for (let i = 0; i < countCeil; i++) {\n    let thisStyle = style;\n    if (countCeil > count && i === countCeil - 1) {\n      // count is not an integer and we've reached the last iteration of\n      // the loop, so add a \"fractional\" skeleton.\n      //\n      // For example, if count is 3.5, we've already added 3 full\n      // skeletons, so now we add one more skeleton that is 0.5 times the\n      // original width.\n      const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n      const fractionalPart = count % 1;\n      const fractionalWidth = typeof width === 'number' ? width * fractionalPart : `calc(${width} * ${fractionalPart})`;\n      thisStyle = {\n        ...thisStyle,\n        width: fractionalWidth\n      };\n    }\n    const skeletonSpan = React.createElement(\"span\", {\n      className: className,\n      style: thisStyle,\n      key: i\n    }, \"\\u200C\");\n    if (inline) {\n      elements.push(skeletonSpan);\n    } else {\n      // Without the <br />, the skeleton lines will all run together if\n      // `width` is specified\n      elements.push(React.createElement(React.Fragment, {\n        key: i\n      }, skeletonSpan, React.createElement(\"br\", null)));\n    }\n  }\n  return React.createElement(\"span\", {\n    className: containerClassName,\n    \"data-testid\": containerTestId,\n    \"aria-live\": \"polite\",\n    \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation\n  }, Wrapper ? elements.map((el, i) => React.createElement(Wrapper, {\n    key: i\n  }, el)) : elements);\n}\nfunction SkeletonTheme(_ref3) {\n  let {\n    children,\n    ...styleOptions\n  } = _ref3;\n  return React.createElement(SkeletonThemeContext.Provider, {\n    value: styleOptions\n  }, children);\n}\nexport { SkeletonTheme, Skeleton as default };","import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFilters } from \"../context/filters\";\n\nexport const useApplications = (queryClient: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getAll = (filters: IFilters) =>\n    useQuery<any, Error>([\"applications\", filters], () => API?.Applications.getAll(filters), {\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n    });\n\n  const getOne = (applicationId: string) =>\n    useQuery<any, Error>([\"applications\", applicationId], () => API?.Applications.getOne(applicationId), {\n      initialData: () =>\n        queryClient.getQueryData<any[]>(\"applications\")?.find((_application) => _application.id === applicationId),\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      enabled: !!applicationId,\n    });\n\n  return { getOne, getAll };\n};\n","import * as React from \"react\";\nimport * as styles from \"./ApplicationsTemplate.module.css\";\nimport { Heading, Paragraph, Icon, Link } from \"@utrecht/component-library-react/dist/css-module\";\nimport { Container } from \"@conduction/components\";\nimport { FiltersContext } from \"../../context/filters\";\nimport { useTranslation } from \"react-i18next\";\nimport { ApplicationCard } from \"../../components/applicationCard/ApplicationCard\";\nimport { QueryClient } from \"react-query\";\nimport { useApplications } from \"../../hooks/applications\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { IconExternalLink } from \"@tabler/icons-react\";\nimport { PaginatedItems } from \"../../components/pagination/pagination\";\n\nexport const ApplicationsTemplate: React.FC = () => {\n  const [filters, setFilters] = React.useContext(FiltersContext);\n  const { t } = useTranslation();\n\n  const queryClient = new QueryClient();\n  const _useApplications = useApplications(queryClient);\n  const getApplications = _useApplications.getAll({\n    ...filters,\n  });\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <div className={styles.header}>\n        <div>\n          <Heading level={2} className={styles.title}>\n            {t(\"Applications\")}\n          </Heading>\n          <Paragraph className={styles.description}>\n            Totaal oplossing op basis van een set componenten. Het gaat om werkende software die een oplossing biedt\n            voor een bepaalde{\" \"}\n            <span>\n              <Link target=\"_new\" href=\"https://www.gemmaonline.nl/index.php/GEMMA_Bedrijfsfuncties\">\n                <Icon>\n                  <IconExternalLink />\n                </Icon>{\" \"}\n                bedrijfsfunctie\n              </Link>\n            </span>\n            .\n          </Paragraph>\n        </div>\n      </div>\n\n      {getApplications.isSuccess && (\n        <>\n          <div className={styles.ComponentsGrid}>\n            {getApplications.data?.results?.map((application: any) => (\n              <ApplicationCard\n                key={application.id}\n                title={{ label: application.name, href: `/applications/${application.id}` }}\n                description={application.shortDescription}\n                tags={{\n                  organization: application?.embedded?.owner?.fullName,\n                  githubLink: application?.demoUrl,\n                }}\n              />\n            ))}\n          </div>\n          <PaginatedItems\n            pages={getApplications.data.pages}\n            currentPage={getApplications.data.page}\n            setPage={(page) => setFilters({ ...filters, applicationsCurrentPage: page })}\n            pageRangeDisplayed={2}\n            containerClassName={styles.paginationContainer}\n          />\n        </>\n      )}\n\n      {!getApplications.data?.results && !getApplications.isLoading && \"Geen resultaten gevonden\"}\n\n      {getApplications.isLoading && <Skeleton height=\"200px\" />}\n    </Container>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentsGrid = \"ApplicationsTemplate-module--ComponentsGrid--a2045\";\nexport var container = \"ApplicationsTemplate-module--container--2be0f\";\nexport var description = \"ApplicationsTemplate-module--description--e2fbb\";\nexport var header = \"ApplicationsTemplate-module--header--15411\";\nexport var icon = \"ApplicationsTemplate-module--icon--47212\";\nexport var paginationContainer = \"ApplicationsTemplate-module--paginationContainer--c29fa\";\nexport var subHeading = \"ApplicationsTemplate-module--subHeading--b2d24\";\nexport var title = \"ApplicationsTemplate-module--title--2d10c\";","import * as React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport _ from \"lodash\";\nimport { ApplicationsTemplate } from \"../../templates/applicationsTemplate/ApplicationsTemplate\";\n\nconst ApplicationsPage: React.FC<PageProps> = (props: PageProps) => {\n  return <ApplicationsTemplate />;\n};\nexport default ApplicationsPage;\n","import ApplicationsPage from \"./ApplicationsPage\";\n\nexport default ApplicationsPage;\n"],"names":["SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","_ref","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","_ref2","count","wrapper","Wrapper","className","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","useApplications","queryClient","API","React","APIContext","getOne","applicationId","useQuery","Applications","initialData","_queryClient$getQuery","getQueryData","find","_application","id","onError","error","Error","message","enabled","getAll","filters","ApplicationsTemplate","_getApplications$data","_getApplications$data2","_getApplications$data3","setFilters","FiltersContext","t","useTranslation","QueryClient","getApplications","_jsxs","Container","layoutClassName","children","_jsx","Heading","level","Paragraph","Link","target","href","Icon","IconExternalLink","isSuccess","_Fragment","data","results","application","_application$embedded","_application$embedded2","ApplicationCard","title","label","name","description","shortDescription","tags","organization","embedded","owner","fullName","githubLink","demoUrl","PaginatedItems","pages","currentPage","page","setPage","applicationsCurrentPage","pageRangeDisplayed","isLoading","props","ApplicationsPage"],"sourceRoot":""}