{"version":3,"file":"6cf082646fc02a7572ed7969eb3677e973ce7868-f31c3b79ff6da681d5f2.js","mappings":"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","sources":["webpack://skeleton-pip/./src/services/getResultsUrl.ts","webpack://skeleton-pip/./src/services/getTokenValue.ts","webpack://skeleton-pip/./src/templates/templateParts/componentCardsAccordion/ComponentCardsAccordionTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/componentCardsAccordion/header/ComponentCardsAccordionHeaderTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/componentCardsAccordion/header/ComponentCardsAccordionHeaderTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/componentCardsAccordion/ComponentCardsAccordionTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.module.css","webpack://skeleton-pip/./src/services/getStatusColor.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/table/TableResultTemplate.tsx","webpack://skeleton-pip/./src/services/getTypeFromSchemaRef.ts","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.module.css","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/cards/CardsResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/layers/LayersResultTemplate.tsx","webpack://skeleton-pip/./src/templates/templateParts/resultsTemplates/ComponentResultsTemplate.tsx"],"sourcesContent":["export const getResultsUrl = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"organizations\";\n  if (value.includes(\"component.schema.json\")) return \"components\";\n  if (value.includes(\"application.schema.json\")) return \"applications\";\n  if (value.includes(\"contacts.schema.json\")) return \"contacts\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"componentlegalentities\";\n\n  //TODO add more values if we make more detail pages\n};\n","export const getTokenValue = (tokenKey: string) => {\n  return getComputedStyle(document.documentElement).getPropertyValue(tokenKey);\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentsGrid = \"ComponentCardsAccordionTemplate-module--ComponentsGrid--ae575\";\nexport var layerColorData = \"--web-app-layer-color-data\";\nexport var layerColorDisabled = \"--web-app-color-background-light\";\nexport var layerColorIntegration = \"--web-app-layer-color-integration\";\nexport var layerColorInteraction = \"--web-app-layer-color-interaction\";\nexport var layerColorProcess = \"--web-app-layer-color-process\";\nexport var layerColorServices = \"--web-app-layer-color-services\";\nexport var layerColorUnknown = \"--web-app-layer-color-unknown\";\nexport var layerFilter = \"ComponentCardsAccordionTemplate-module--layerFilter--408a0\";","// extracted by mini-css-extract-plugin\nexport var active = \"ComponentCardsAccordionHeaderTemplate-module--active--d84b0\";\nexport var badge = \"ComponentCardsAccordionHeaderTemplate-module--badge--83619\";\nexport var container = \"ComponentCardsAccordionHeaderTemplate-module--container--c6d09\";\nexport var content = \"ComponentCardsAccordionHeaderTemplate-module--content--7aee0\";\nexport var dataBadge = \"ComponentCardsAccordionHeaderTemplate-module--dataBadge--d71da\";\nexport var disabled = \"ComponentCardsAccordionHeaderTemplate-module--disabled--03d0b\";\nexport var integrationBadge = \"ComponentCardsAccordionHeaderTemplate-module--integrationBadge--73313\";\nexport var interactionBadge = \"ComponentCardsAccordionHeaderTemplate-module--interactionBadge--04770\";\nexport var layerIcon = \"ComponentCardsAccordionHeaderTemplate-module--layerIcon--4b6ce\";\nexport var maxNumber = \"ComponentCardsAccordionHeaderTemplate-module--maxNumber--bd71f\";\nexport var processBadge = \"ComponentCardsAccordionHeaderTemplate-module--processBadge--6e780\";\nexport var servicesBadge = \"ComponentCardsAccordionHeaderTemplate-module--servicesBadge--20d9f\";\nexport var title = \"ComponentCardsAccordionHeaderTemplate-module--title--6c56d\";\nexport var toggleIcon = \"ComponentCardsAccordionHeaderTemplate-module--toggleIcon--c46d3\";\nexport var unknownBadge = \"ComponentCardsAccordionHeaderTemplate-module--unknownBadge--c8de9\";","import * as React from \"react\";\nimport * as styles from \"./ComponentCardsAccordionHeaderTemplate.module.css\";\nimport { faChevronRight, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\nimport _ from \"lodash\";\nimport { BadgeCounter } from \"@conduction/components\";\nimport { Heading, Separator } from \"@utrecht/component-library-react/dist/css-module\";\n\ninterface ComponentCardsAccordionHeaderTemplateProps {\n  title: string;\n  active: boolean;\n  badgeNumber: number;\n}\n\nexport const ComponentCardsAccordionHeaderTemplate: React.FC<ComponentCardsAccordionHeaderTemplateProps> = ({\n  title,\n  active,\n  badgeNumber,\n}) => {\n  const { t } = useTranslation();\n  const hasItems = badgeNumber > 0;\n  const badgeLabel = badgeNumber < 100 ? _.toString(badgeNumber) : \"99+\";\n  const maxItems = badgeNumber > 100;\n\n  return (\n    <div className={clsx(styles.container, active && styles.active, !hasItems && styles.disabled)}>\n      <div className={styles.content}>\n        <FontAwesomeIcon className={styles.layerIcon} icon={faLayerGroup} />\n        <span className={clsx(styles[_.camelCase(`${title} badge`)], styles.badge, maxItems && styles.maxNumber)}>\n          <BadgeCounter number={badgeLabel}>\n            <Heading level={3} className={styles.title}>\n              {t(title)}\n            </Heading>\n          </BadgeCounter>\n        </span>\n        <FontAwesomeIcon className={clsx(styles.toggleIcon, active && styles.active)} icon={faChevronRight} />\n      </div>\n\n      <Separator />\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport * as styles from \"./ComponentCardsAccordionTemplate.module.css\";\nimport _ from \"lodash\";\nimport { getTokenValue } from \"../../../services/getTokenValue\";\nimport { ComponentCard } from \"../../../components/componentCard/ComponentCard\";\nimport { LayerAccordion } from \"../layerAccordion/LayerAccordionTemplate\";\nimport { ComponentCardsAccordionHeaderTemplate } from \"./header/ComponentCardsAccordionHeaderTemplate\";\nimport { Button, ButtonGroup, ColorSample } from \"@utrecht/component-library-react\";\nimport clsx from \"clsx\";\nimport { useTranslation } from \"react-i18next\";\ninterface ComponentCardsAccordionProps {\n  components: any[];\n}\n\nexport const ComponentCardsAccordionTemplate: React.FC<ComponentCardsAccordionProps> = ({ components }) => {\n  const Accordion = LayerAccordion.accordion;\n  const AccordionCardsController = LayerAccordion.controller;\n\n  const { t } = useTranslation();\n\n  const { open: openInteraction, setOpen: setOpenInteraction } = AccordionCardsController();\n  const { open: openProcess, setOpen: setOpenProcess } = AccordionCardsController();\n  const { open: openIntegration, setOpen: setOpenIntegration } = AccordionCardsController();\n  const { open: openServices, setOpen: setOpenServices } = AccordionCardsController();\n  const { open: openData, setOpen: setOpenData } = AccordionCardsController();\n  const { open: openUnknown, setOpen: setOpenUnknown } = AccordionCardsController();\n\n  const interaction = components.filter((component) => {\n    return _.upperFirst(component?.embedded?.nl?.embedded?.commonground?.layerType) === \"Interface\";\n  });\n  const process = components.filter((component) => {\n    return _.upperFirst(component?.embedded?.nl?.embedded?.commonground?.layerType) === \"Process\";\n  });\n  const integration = components.filter((component) => {\n    return _.upperFirst(component?.embedded?.nl?.embedded?.commonground?.layerType) === \"Integration\";\n  });\n  const services = components.filter((component) => {\n    return _.upperFirst(component?.embedded?.nl?.embedded?.commonground?.layerType) === \"Service\";\n  });\n  const data = components.filter((component) => {\n    return _.upperFirst(component?.embedded?.nl?.embedded?.commonground?.layerType) === \"Data\";\n  });\n  const unknown = components.filter((component) => {\n    return component?.embedded?.nl?.embedded?.commonground?.layerType === (null || undefined);\n  });\n\n  if (!components.length) {\n    return <>Geen resultaten gevonden.</>;\n  }\n\n  return (\n    <>\n      <ButtonGroup>\n        <Button\n          appearance=\"subtle-button\"\n          className={clsx(styles.layerFilter)}\n          disabled={interaction.length === 0}\n          onClick={() => {\n            setOpenInteraction(!openInteraction);\n          }}\n          pressed={openInteraction}\n        >\n          <ColorSample\n            color={\n              interaction.length === 0\n                ? getTokenValue(styles.layerColorDisabled)\n                : getTokenValue(styles.layerColorInteraction)\n            }\n          />\n          {t(\"Interaction\")}\n        </Button>\n        <Button\n          className={clsx(styles.layerFilter)}\n          appearance=\"subtle-button\"\n          disabled={process.length === 0}\n          onClick={() => {\n            setOpenProcess(!openProcess);\n          }}\n          pressed={openProcess}\n        >\n          <ColorSample\n            color={\n              process.length === 0 ? getTokenValue(styles.layerColorDisabled) : getTokenValue(styles.layerColorProcess)\n            }\n          />\n          {t(\"Process\")}\n        </Button>\n        <Button\n          className={clsx(styles.layerFilter)}\n          appearance=\"subtle-button\"\n          disabled={integration.length === 0}\n          onClick={() => {\n            setOpenIntegration(!openIntegration);\n          }}\n          pressed={openIntegration}\n        >\n          <ColorSample\n            color={\n              integration.length === 0\n                ? getTokenValue(styles.layerColorDisabled)\n                : getTokenValue(styles.layerColorIntegration)\n            }\n          />\n          {t(\"Integration\")}\n        </Button>\n        <Button\n          className={clsx(styles.layerFilter)}\n          appearance=\"subtle-button\"\n          disabled={services.length === 0}\n          onClick={() => {\n            setOpenServices(!openServices);\n          }}\n          pressed={openServices}\n        >\n          <ColorSample\n            color={\n              services.length === 0\n                ? getTokenValue(styles.layerColorDisabled)\n                : getTokenValue(styles.layerColorServices)\n            }\n          />\n          {t(\"Service\")}\n        </Button>\n        <Button\n          className={clsx(styles.layerFilter)}\n          appearance=\"subtle-button\"\n          disabled={data.length === 0}\n          onClick={() => {\n            setOpenData(!openData);\n          }}\n          pressed={openData}\n        >\n          <ColorSample\n            color={data.length === 0 ? getTokenValue(styles.layerColorDisabled) : getTokenValue(styles.layerColorData)}\n          />\n          {t(\"Data\")}\n        </Button>\n        <Button\n          className={clsx(styles.layerFilter)}\n          appearance=\"subtle-button\"\n          disabled={unknown.length === 0}\n          onClick={() => {\n            setOpenUnknown(!openUnknown);\n          }}\n          pressed={openUnknown}\n        >\n          <ColorSample\n            color={\n              unknown.length === 0 ? getTokenValue(styles.layerColorDisabled) : getTokenValue(styles.layerColorUnknown)\n            }\n          />\n          {t(\"Unknown\")}\n        </Button>\n      </ButtonGroup>\n      <Accordion\n        open={openInteraction}\n        setOpen={setOpenInteraction}\n        color={getTokenValue(styles.layerColorInteraction)}\n        disabled={!interaction.length}\n        header={\n          <ComponentCardsAccordionHeaderTemplate\n            title=\"Interaction\"\n            active={openInteraction}\n            badgeNumber={interaction.length}\n          />\n        }\n      >\n        <Components components={interaction} />\n      </Accordion>\n\n      <Accordion\n        open={openProcess}\n        setOpen={setOpenProcess}\n        color={getTokenValue(styles.layerColorProcess)}\n        disabled={!process.length}\n        header={\n          <ComponentCardsAccordionHeaderTemplate title=\"Process\" active={openProcess} badgeNumber={process.length} />\n        }\n      >\n        <Components components={process} />\n      </Accordion>\n\n      <Accordion\n        open={openIntegration}\n        setOpen={setOpenIntegration}\n        color={getTokenValue(styles.layerColorIntegration)}\n        disabled={!integration.length}\n        header={\n          <ComponentCardsAccordionHeaderTemplate\n            title=\"Integration\"\n            active={openIntegration}\n            badgeNumber={integration.length}\n          />\n        }\n      >\n        <Components components={integration} />\n      </Accordion>\n\n      <Accordion\n        open={openServices}\n        setOpen={setOpenServices}\n        color={getTokenValue(styles.layerColorServices)}\n        disabled={!services.length}\n        header={\n          <ComponentCardsAccordionHeaderTemplate title=\"Services\" active={openServices} badgeNumber={services.length} />\n        }\n      >\n        <Components components={services} />\n      </Accordion>\n\n      <Accordion\n        open={openData}\n        setOpen={setOpenData}\n        color={getTokenValue(styles.layerColorData)}\n        disabled={!data.length}\n        header={<ComponentCardsAccordionHeaderTemplate title=\"Data\" active={openData} badgeNumber={data.length} />}\n      >\n        <Components components={data} />\n      </Accordion>\n\n      <Accordion\n        open={openUnknown}\n        setOpen={setOpenUnknown}\n        color={getTokenValue(styles.layerColorUnknown)}\n        disabled={!unknown.length}\n        header={\n          <ComponentCardsAccordionHeaderTemplate title=\"Unknown\" active={openUnknown} badgeNumber={unknown.length} />\n        }\n      >\n        <Components components={unknown} />\n      </Accordion>\n    </>\n  );\n};\n\ninterface ComponentsProps {\n  components: any[];\n}\n\nconst Components: React.FC<ComponentsProps> = ({ components }) => {\n  return (\n    <div className={styles.ComponentsGrid}>\n      {components.map((component) => (\n        <ComponentCard\n          key={component.id}\n          title={{ label: component.name, href: `/components/${component.id ?? component._self.id}` }}\n          description={component.embedded?.description?.shortDescription}\n          layer={component.embedded?.nl?.embedded?.commonground?.layerType ?? \"Unknown\"}\n          categories={component.categories}\n          tags={{\n            status: component.developmentStatus,\n            installations: component.usedBy?.length.toString() ?? \"0\",\n            organization: {\n              name: component.embedded?.url?.embedded?.organisation?.name,\n              website: component.embedded?.url?.embedded?.organisation?.website,\n            },\n            licence: component.embedded?.legal?.license,\n            githubLink: component.embedded?.url?.url,\n          }}\n        />\n      ))}\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport var dataCategory = \"TableResultTemplate-module--dataCategory--3b1ef\";\nexport var dataLayer = \"TableResultTemplate-module--dataLayer--08c4e\";\nexport var detailsLink = \"TableResultTemplate-module--detailsLink--5c419\";\nexport var icon = \"TableResultTemplate-module--icon--3748e\";\nexport var integrationCategory = \"TableResultTemplate-module--integrationCategory--c30df\";\nexport var integrationLayer = \"TableResultTemplate-module--integrationLayer--d5e43\";\nexport var interactionCategory = \"TableResultTemplate-module--interactionCategory--33b43\";\nexport var interactionLayer = \"TableResultTemplate-module--interactionLayer--e787a\";\nexport var interfaceCategory = \"TableResultTemplate-module--interfaceCategory--1f672\";\nexport var interfaceLayer = \"TableResultTemplate-module--interfaceLayer--eaa6a\";\nexport var name = \"TableResultTemplate-module--name--6b85e\";\nexport var procesCategory = \"TableResultTemplate-module--procesCategory--5a2fc\";\nexport var processCategory = \"TableResultTemplate-module--processCategory--50b3a\";\nexport var processLayer = \"TableResultTemplate-module--processLayer--359ae\";\nexport var processsLayer = \"TableResultTemplate-module--processsLayer--150d4\";\nexport var serviceCategory = \"TableResultTemplate-module--serviceCategory--1a87c\";\nexport var serviceLayer = \"TableResultTemplate-module--serviceLayer--19304\";\nexport var servicesCategory = \"TableResultTemplate-module--servicesCategory--cf685\";\nexport var servicesLayer = \"TableResultTemplate-module--servicesLayer--5d508\";\nexport var table = \"TableResultTemplate-module--table--791de\";\nexport var tableBody = \"TableResultTemplate-module--tableBody--52900\";\nexport var tableHeader = \"TableResultTemplate-module--tableHeader--b84bb\";\nexport var tableRow = \"TableResultTemplate-module--tableRow--c2558\";\nexport var tagWidth = \"TableResultTemplate-module--tagWidth--3c99e\";\nexport var unknownCategory = \"TableResultTemplate-module--unknownCategory--a3e85\";\nexport var unknownLayer = \"TableResultTemplate-module--unknownLayer--0c621\";","export const getStatusColor = (status: string): string => {\r\n  switch (status) {\r\n    case \"Concept\":\r\n      return \"warning\";\r\n    case \"Development\":\r\n      return \"warning\";\r\n    case \"Beta\":\r\n      return \"warning\";\r\n    case \"Bruikbaar\":\r\n      return \"safe\";\r\n    case \"Stable\":\r\n      return \"safe\";\r\n    case \"Obsolete\":\r\n      return \"danger\";\r\n    default:\r\n      return \"\";\r\n  }\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./TableResultTemplate.module.css\";\nimport _ from \"lodash\";\nimport { Icon, StatusBadge, DataBadge, Link } from \"@utrecht/component-library-react/dist/css-module\";\nimport { navigate } from \"gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Table,\n  TableRow,\n  TableBody,\n  TableCell,\n  TableHeader,\n  TableHeaderCell,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowRight } from \"@tabler/icons-react\";\nimport clsx from \"clsx\";\nimport { getResultsUrl } from \"../../../../services/getResultsUrl\";\nimport { getTypeFromSchemaRef } from \"../../../../services/getTypeFromSchemaRef\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfoCircle, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\nimport { TOOLTIP_ID } from \"../../../../layout/Layout\";\nimport { getStatusColor } from \"../../../../services/getStatusColor\";\nimport { HorizontalOverflowWrapper } from \"@conduction/components\";\n\ninterface TableResultTemplateProps {\n  components: any[];\n  hideTableHead?: boolean;\n}\n\nexport const TableResultTemplate: React.FC<TableResultTemplateProps> = ({ components, hideTableHead }) => {\n  const { t } = useTranslation();\n\n  return (\n    <HorizontalOverflowWrapper\n      ariaLabels={{ scrollLeftButton: t(\"Scroll left\"), scrollRightButton: t(\"Scroll right\") }}\n    >\n      <Table className={styles.table}>\n        {!hideTableHead && (\n          <TableHeader className={styles.tableHeader}>\n            <TableRow>\n              <TableHeaderCell>{t(\"Name\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Layer\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Sources\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Software type\")}</TableHeaderCell>\n              <TableHeaderCell>{t(\"Status\")}</TableHeaderCell>\n              <TableHeader />\n            </TableRow>\n          </TableHeader>\n        )}\n\n        <TableBody className={styles.tableBody}>\n          {components.length > 0 &&\n            components.map((component) => (\n              <TableRow\n                className={styles.tableRow}\n                key={component.id}\n                onClick={() => navigate(`/${getResultsUrl(component._self?.schema.ref)}/${component.id}`)}\n              >\n                <TableCell>\n                  <span className={styles.name}>{component.name}</span>\n                </TableCell>\n                <TableCell>{t(_.upperFirst(getTypeFromSchemaRef(component._self?.schema.ref)))}</TableCell>\n                <TableCell>\n                  <div\n                    className={clsx(\n                      styles[\n                        _.camelCase(\n                          t(\n                            `${\n                              (component._self.schema.ref.includes(\"component.schema.json\") &&\n                                component.embedded?.nl?.embedded?.commonground?.layerType) ??\n                              \"Unknown\"\n                            } layer`,\n                          ),\n                        )\n                      ],\n                    )}\n                  >\n                    <DataBadge\n                      data-tooltip-id={TOOLTIP_ID}\n                      data-tooltip-content={t(\"Layer\")}\n                      className={styles.tagWidth}\n                    >\n                      <FontAwesomeIcon icon={faLayerGroup} />{\" \"}\n                      {t(\n                        _.upperFirst(\n                          component._self.schema.ref.includes(\"component.schema.json\")\n                            ? component.embedded?.nl?.embedded?.commonground.layerType ?? t(\"Unknown\")\n                            : \"N.V.T.\",\n                        ),\n                      )}\n                    </DataBadge>\n                  </div>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content={t(\"Sources\")}\n                    className={styles.tagWidth}\n                  >\n                    {_.upperFirst(\n                      component._self?.synchronizations\n                        ? component._self?.synchronizations?.length\n                          ? component._self?.synchronizations?.at(-1)?.source.name\n                          : \"Onbekend\"\n                        : \"N.V.T.\",\n                    )}\n                  </DataBadge>\n                </TableCell>\n\n                <TableCell>\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Component Type\">\n                    {_.upperFirst(\n                      component._self.schema.ref.includes(\"component.schema.json\")\n                        ? component.softwareType ?? \"Onbekend\"\n                        : \"N.V.T.\",\n                    )}\n                  </DataBadge>\n                </TableCell>\n\n                <TableCell>\n                  <StatusBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Status\"\n                    status={getStatusColor(_.upperFirst(component.developmentStatus) ?? \"Onbekend\")}\n                    className={styles.tagWidth}\n                  >\n                    {component._self.schema.ref.includes(\"component.schema.json\") ? (\n                      <>\n                        <span className={styles.icon}>\n                          <FontAwesomeIcon icon={faInfoCircle} />\n                        </span>\n                        {_.upperFirst(component.developmentStatus ?? \"Onbekend\")}\n                      </>\n                    ) : (\n                      \"N.V.T.\"\n                    )}\n                  </StatusBadge>\n                </TableCell>\n\n                <TableCell>\n                  <Link\n                    onClick={() => navigate(`/${getResultsUrl(component._self?.schema?.ref)}/${component.id}`)}\n                    className={styles.detailsLink}\n                  >\n                    <Icon>\n                      <IconArrowRight />\n                    </Icon>\n                    {t(\"Details\")}\n                  </Link>\n                </TableCell>\n              </TableRow>\n            ))}\n\n          {!components.length && (\n            <TableRow>\n              <TableCell>{t(\"Geen resultaten gevonden\")}</TableCell>\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n              <TableCell />\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </HorizontalOverflowWrapper>\n  );\n};\n","export const getTypeFromSchemaRef = (value: any): any => {\n  if (value.includes(\"organisation.schema.json\")) return \"Organization\";\n  if (value.includes(\"component.schema.json\")) return \"Component\";\n  if (value.includes(\"application.schema.json\")) return \"Application\";\n  if (value.includes(\"contacts.schema.json\")) return \"Contact\";\n  if (value.includes(\"componentlegalentity.schema.json\")) return \"Component legal Entity\";\n  if (value.includes(\"catalogi.schema.json\")) return \"Catalogi\";\n\n  //TODO add more values if we make more detail pages\n};\n","// extracted by mini-css-extract-plugin\nexport var ComponentsGrid = \"CardsResultTemplate-module--ComponentsGrid--46d3c\";","import * as React from \"react\";\nimport * as styles from \"./CardsResultTemplate.module.css\";\nimport { ComponentCard } from \"../../../../components/componentCard/ComponentCard\";\nimport { OrganizationCard } from \"../../../../components/organizationCard/OrganizationCard\";\nimport { ApplicationCard } from \"../../../../components/applicationCard/ApplicationCard\";\nimport { Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\n\ninterface CardsResultTemplateProps {\n  components: any[];\n}\n\nexport const CardsResultTemplate: React.FC<CardsResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self;\n  });\n\n  const noResultFound = _components.every((component) => {\n    return (\n      !component._self.schema.ref.includes(\"component.schema.json\") &&\n      !component._self.schema.ref.includes(\"organisation.schema.json\") &&\n      !component._self.schema.ref.includes(\"application.schema.json\")\n    );\n  });\n\n  if (noResultFound) return <Paragraph>Geen resultaten gevonden.</Paragraph>;\n\n  return (\n    <div className={styles.ComponentsGrid}>\n      {_components.map((component) => (\n        <>\n          {component._self.schema.ref.includes(\"organisation.schema.json\") && (\n            <OrganizationCard\n              title={{\n                label: component.name,\n                href: `/organizations/${component.id}`,\n              }}\n              description={component.description}\n              website={component.website}\n              logo={component.logo}\n              components={{\n                owned: component.owns?.length.toString() ?? \"0\",\n                supported: component.supports?.length.toString() ?? \"0\",\n                used: component.uses?.length.toString() ?? \"0\",\n              }}\n              gitHub={component.github}\n              gitLab={component.gitlab}\n              type={component.type}\n            />\n          )}\n          {component._self.schema.ref.includes(\"component.schema.json\") && (\n            <ComponentCard\n              key={component.id}\n              title={{ label: component.name, href: `/components/${component.id}` }}\n              description={component.embedded.description?.shortDescription}\n              layer={component.embedded.nl?.embedded?.commonground?.layerType ?? \"Unknown\"}\n              categories={component.categories}\n              tags={{\n                status: component.developmentStatus,\n                installations: component.usedBy?.length.toString() ?? \"0\",\n                organization: {\n                  name: component.embedded?.url?.embedded?.organisation?.name,\n                  website: component.embedded?.url?.embedded?.organisation?.website,\n                },\n                licence: component.embedded?.legal?.license,\n                githubLink: component.embedded?.url?.url,\n              }}\n            />\n          )}\n          {component._self.schema.ref.includes(\"application.schema.json\") && (\n            <ApplicationCard\n              key={component.id}\n              title={{ label: component.name, href: `/applications/${component.id}` }}\n              description={component.shortDescription}\n              tags={{\n                organization: component?.embedded?.owner.fullName,\n                githubLink: component?.demoUrl,\n              }}\n            />\n          )}\n        </>\n      ))}\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport { ComponentCardsAccordionTemplate } from \"../../componentCardsAccordion/ComponentCardsAccordionTemplate\";\n\ninterface LayersResultTemplateProps {\n  components: any[];\n}\n\nexport const LayersResultTemplate: React.FC<LayersResultTemplateProps> = ({ components }) => {\n  const _components = components.filter((component) => {\n    return component._self.schema.ref.includes(\"component.schema.json\");\n  });\n\n  return <ComponentCardsAccordionTemplate components={_components} />;\n};\n","import * as React from \"react\";\nimport { TComponentResultsLayout } from \"../../../context/filters\";\nimport { TableResultTemplate } from \"./table/TableResultTemplate\";\nimport { CardsResultTemplate } from \"./cards/CardsResultTemplate\";\nimport { LayersResultTemplate } from \"./layers/LayersResultTemplate\";\n\ninterface ComponentResultsTemplateProps {\n  type: TComponentResultsLayout;\n  components: any[];\n}\n\nexport const ComponentResultTemplate: React.FC<ComponentResultsTemplateProps> = ({ components, type }) => {\n  switch (type) {\n    case \"table\":\n      return <TableResultTemplate {...{ components }} />;\n\n    case \"cards\":\n      return <CardsResultTemplate {...{ components }} />;\n\n    case \"layer\":\n      return <LayersResultTemplate {...{ components }} />;\n  }\n};\n"],"names":["getResultsUrl","value","includes","getTokenValue","tokenKey","getComputedStyle","document","documentElement","getPropertyValue","layerColorData","layerColorDisabled","layerColorIntegration","layerColorInteraction","layerColorProcess","layerColorServices","layerColorUnknown","layerFilter","badge","container","content","dataBadge","disabled","integrationBadge","interactionBadge","layerIcon","maxNumber","processBadge","servicesBadge","toggleIcon","unknownBadge","ComponentCardsAccordionHeaderTemplate","_ref","title","active","badgeNumber","t","useTranslation","hasItems","badgeLabel","_toString","maxItems","_jsxs","className","clsx","styles","children","_jsx","FontAwesomeIcon","icon","faLayerGroup","_camelCase","BadgeCounter","number","Heading","level","faChevronRight","Separator","ComponentCardsAccordionTemplate","components","Accordion","LayerAccordion","accordion","AccordionCardsController","controller","open","openInteraction","setOpen","setOpenInteraction","openProcess","setOpenProcess","openIntegration","setOpenIntegration","openServices","setOpenServices","openData","setOpenData","openUnknown","setOpenUnknown","interaction","filter","component","_component$embedded","_component$embedded$n","_component$embedded$n2","_component$embedded$n3","_upperFirst","embedded","nl","commonground","layerType","process","_component$embedded2","_component$embedded2$","_component$embedded2$2","_component$embedded2$3","integration","_component$embedded3","_component$embedded3$","_component$embedded3$2","_component$embedded3$3","services","_component$embedded4","_component$embedded4$","_component$embedded4$2","_component$embedded4$3","data","_component$embedded5","_component$embedded5$","_component$embedded5$2","_component$embedded5$3","unknown","_component$embedded6","_component$embedded6$","_component$embedded6$2","_component$embedded6$3","undefined","length","_Fragment","ButtonGroup","Button","appearance","onClick","pressed","ColorSample","color","header","Components","_ref2","map","_component$id","_component$embedded7","_component$embedded7$","_component$embedded$n4","_component$embedded8","_component$embedded8$","_component$embedded8$2","_component$embedded8$3","_component$usedBy$len","_component$usedBy","_component$embedded9","_component$embedded9$","_component$embedded9$2","_component$embedded9$3","_component$embedded10","_component$embedded11","_component$embedded12","_component$embedded13","_component$embedded14","_component$embedded15","_component$embedded16","_component$embedded17","ComponentCard","label","name","href","id","_self","description","shortDescription","layer","categories","tags","status","developmentStatus","installations","usedBy","toString","organization","url","organisation","website","licence","legal","license","githubLink","dataCategory","dataLayer","detailsLink","integrationCategory","integrationLayer","interactionCategory","interactionLayer","interfaceCategory","interfaceLayer","procesCategory","processCategory","processLayer","processsLayer","serviceCategory","serviceLayer","servicesCategory","servicesLayer","table","tableBody","tableHeader","tableRow","tagWidth","unknownCategory","unknownLayer","getStatusColor","TableResultTemplate","hideTableHead","HorizontalOverflowWrapper","ariaLabels","scrollLeftButton","scrollRightButton","Table","TableHeader","TableRow","TableHeaderCell","TableBody","_component$_self2","_component$_self3","_component$_self4","_component$_self4$syn","_component$_self5","_component$_self5$syn","_component$_self5$syn2","_component$softwareTy","_upperFirst2","_component$developmen","_component$_self","navigate","schema","ref","TableCell","DataBadge","TOOLTIP_ID","synchronizations","at","source","softwareType","StatusBadge","faInfoCircle","Link","_component$_self6","_component$_self6$sch","Icon","IconArrowRight","CardsResultTemplate","_components","every","Paragraph","_component$owns$lengt","_component$owns","_component$supports$l","_component$supports","_component$uses$lengt","_component$uses","_component$embedded$d","_component$embedded$u","_component$embedded$u2","_component$embedded$u3","OrganizationCard","logo","owned","owns","supported","supports","used","uses","gitHub","github","gitLab","gitlab","type","ApplicationCard","owner","fullName","demoUrl","LayersResultTemplate","ComponentResultTemplate"],"sourceRoot":""}