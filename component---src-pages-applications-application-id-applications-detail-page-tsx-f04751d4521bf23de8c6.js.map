{"version":3,"file":"component---src-pages-applications-application-id-applications-detail-page-tsx-f04751d4521bf23de8c6.js","mappings":"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","sources":["webpack://skeleton-pip/./src/hooks/applications.ts","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.module.css","webpack://skeleton-pip/./src/templates/applicationsDetailTemplate/ApplicationsDetailTemplate.tsx","webpack://skeleton-pip/./src/pages/applications/[applicationId]/ApplicationsDetailPage.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { QueryClient, useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\nimport { IFilters } from \"../context/filters\";\n\nexport const useApplications = (queryClient: QueryClient) => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getAll = (filters: IFilters) =>\n    useQuery<any, Error>([\"applications\", filters], () => API?.Applications.getAll(filters), {\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n    });\n\n  const getOne = (applicationId: string) =>\n    useQuery<any, Error>([\"applications\", applicationId], () => API?.Applications.getOne(applicationId), {\n      initialData: () =>\n        queryClient.getQueryData<any[]>(\"applications\")?.find((_application) => _application.id === applicationId),\n      onError: (error) => {\n        throw new Error(error.message);\n      },\n      enabled: !!applicationId,\n    });\n\n  return { getOne, getAll };\n};\n","// extracted by mini-css-extract-plugin\nexport var backButton = \"ApplicationsDetailTemplate-module--backButton--5f643\";\nexport var buttonIcon = \"ApplicationsDetailTemplate-module--buttonIcon--3b584\";\nexport var components = \"ApplicationsDetailTemplate-module--components--eb9d2\";\nexport var container = \"ApplicationsDetailTemplate-module--container--e6fce\";\nexport var dependenciesDisplaySwitchButtons = \"ApplicationsDetailTemplate-module--dependenciesDisplaySwitchButtons--8b90b\";\nexport var description = \"ApplicationsDetailTemplate-module--description--31b70\";\nexport var header = \"ApplicationsDetailTemplate-module--header--bd1fa\";\nexport var layerAndCategoryContainer = \"ApplicationsDetailTemplate-module--layerAndCategoryContainer--f8e7d\";\nexport var noComponentsFound = \"ApplicationsDetailTemplate-module--noComponentsFound--23e6a\";\nexport var screenshot = \"ApplicationsDetailTemplate-module--screenshot--c7466\";\nexport var screenshotContainer = \"ApplicationsDetailTemplate-module--screenshotContainer--da970\";\nexport var title = \"ApplicationsDetailTemplate-module--title--8914e\";","import * as React from \"react\";\nimport * as styles from \"./ApplicationsDetailTemplate.module.css\";\nimport { Container } from \"@conduction/components\";\nimport {\n  Heading,\n  Icon,\n  Button,\n  ButtonGroup,\n  DataBadge,\n  Separator,\n  Link,\n} from \"@utrecht/component-library-react/dist/css-module\";\nimport { IconArrowLeft } from \"@tabler/icons-react\";\nimport { useTranslation } from \"react-i18next\";\nimport { faArrowLeft, faCircleNodes, faHouse, faLaptopCode, faLayerGroup } from \"@fortawesome/free-solid-svg-icons\";\nimport Skeleton from \"react-loading-skeleton\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { QueryClient } from \"react-query\";\nimport { useApplications } from \"../../hooks/applications\";\nimport { DependenciesTemplate } from \"../templateParts/dependenciesTemplates/ComponentDependenciesTemplate\";\nimport { ExpandableLeadParagraph } from \"../../components/expandableLeadParagraph/ExpandableLeadParagraph\";\nimport { TOOLTIP_ID } from \"../../layout/Layout\";\nimport { navigate } from \"gatsby-link\";\n\ninterface ApplicationsDetailTemplateProps {\n  applicationId: string;\n}\n\nexport const ApplicationsDetailTemplate: React.FC<ApplicationsDetailTemplateProps> = ({ applicationId }) => {\n  const { t } = useTranslation();\n  const [layerType, setlayerType] = React.useState<\"layer\" | \"relations\">(\"layer\");\n\n  const queryClient = new QueryClient();\n  const _useApplications = useApplications(queryClient);\n  const getApplications = _useApplications.getOne(applicationId);\n\n  return (\n    <Container layoutClassName={styles.container}>\n      <Link className={styles.backButton} onClick={() => navigate(\"/applications\")}>\n        <Icon>\n          <FontAwesomeIcon icon={faArrowLeft} />\n        </Icon>\n        {t(\"Back to applications\")}\n      </Link>\n\n      {getApplications.isSuccess && (\n        <>\n          <div className={styles.header}>\n            <div className={styles.description}>\n              <Heading level={1} className={styles.title}>\n                {getApplications.data.name}\n              </Heading>\n\n              <ExpandableLeadParagraph\n                description={getApplications.data.description ?? t(\"There is no description available\")}\n              />\n\n              <div className={styles.layerAndCategoryContainer}>\n                {getApplications.data.embedded?.owner && (\n                  <DataBadge data-tooltip-id={TOOLTIP_ID} data-tooltip-content=\"Organisatie\">\n                    <FontAwesomeIcon icon={faHouse} />\n                    {getApplications.data.embedded?.owner.fullName}\n                  </DataBadge>\n                )}\n\n                {getApplications.data.demoUrl && (\n                  <DataBadge\n                    data-tooltip-id={TOOLTIP_ID}\n                    data-tooltip-content=\"Demo\"\n                    onClick={() => open(getApplications.data.demoUrl)}\n                  >\n                    <FontAwesomeIcon icon={faLaptopCode} />\n                    {t(\"Demo\")}\n                  </DataBadge>\n                )}\n              </div>\n            </div>\n          </div>\n\n          <Separator />\n\n          <div>\n            <Heading level={2} className={styles.title}>\n              Screenshot\n            </Heading>\n            <div className={styles.screenshotContainer}>\n              <img src={getApplications.data.detailPageImageUrl} className={styles.screenshot} />\n            </div>\n          </div>\n\n          <Separator />\n\n          {getApplications.data?.embedded?.components && (\n            <div className={styles.components}>\n              <ButtonGroup className={styles.dependenciesDisplaySwitchButtons}>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"layer\"}\n                  appearance={layerType === \"layer\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"layer\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faLayerGroup} />\n                  </Icon>{\" \"}\n                  {t(\"Layers\")}\n                </Button>\n                <Button\n                  className={styles.buttonIcon}\n                  pressed={layerType === \"relations\"}\n                  appearance={layerType === \"relations\" ? \"secondary-action-button\" : \"subtle-button\"}\n                  onClick={() => setlayerType(\"relations\")}\n                >\n                  <Icon>\n                    <FontAwesomeIcon icon={faCircleNodes} />\n                  </Icon>{\" \"}\n                  {t(\"Relations\")}\n                </Button>\n              </ButtonGroup>\n\n              <DependenciesTemplate\n                type={layerType}\n                components={getApplications.data?.embedded?.components ?? []}\n                mainComponent={{\n                  id: getApplications.data.id,\n                  name: getApplications.data.name,\n                  layer: getApplications.data.embedded?.nl?.embedded?.commonground.layerType || null,\n                }}\n              />\n            </div>\n          )}\n\n          {!getApplications.data?.embedded?.components && (\n            <span className={styles.noComponentsFound}>Deze applicatie heeft (nog) geen gekoppelde componenten.</span>\n          )}\n        </>\n      )}\n\n      {getApplications.isLoading && <Skeleton height=\"200px\" />}\n    </Container>\n  );\n};\n","import * as React from \"react\";\nimport { PageProps } from \"gatsby\";\nimport { ApplicationsDetailTemplate } from \"../../../templates/applicationsDetailTemplate/ApplicationsDetailTemplate\";\n\nconst ApplicationsDetailPage: React.FC<PageProps> = (props: PageProps) => {\n  return <ApplicationsDetailTemplate applicationId={props.params.applicationId} />;\n};\nexport default ApplicationsDetailPage;\n"],"names":["useApplications","queryClient","API","React","APIContext","getOne","applicationId","useQuery","Applications","initialData","_queryClient$getQuery","getQueryData","find","_application","id","onError","error","Error","message","enabled","getAll","filters","buttonIcon","title","ApplicationsDetailTemplate","_ref","_getApplications$data","_getApplications$data2","_getApplications$data3","_getApplications$data4","_getApplications$data5","_getApplications$data6","_getApplications$data7","_getApplications$data8","_getApplications$data9","_getApplications$data10","_getApplications$data11","_getApplications$data12","_getApplications$data13","t","useTranslation","layerType","setlayerType","QueryClient","getApplications","_jsxs","Container","layoutClassName","children","Link","className","onClick","navigate","_jsx","Icon","FontAwesomeIcon","icon","faArrowLeft","isSuccess","_Fragment","Heading","level","styles","data","name","ExpandableLeadParagraph","description","embedded","owner","DataBadge","TOOLTIP_ID","faHouse","fullName","demoUrl","open","faLaptopCode","Separator","src","detailPageImageUrl","components","ButtonGroup","Button","pressed","appearance","faLayerGroup","faCircleNodes","DependenciesTemplate","type","mainComponent","layer","nl","commonground","isLoading","Skeleton","height","props","params"],"sourceRoot":""}