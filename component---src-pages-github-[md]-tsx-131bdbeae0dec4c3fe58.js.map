{"version":3,"file":"component---src-pages-github-[md]-tsx-131bdbeae0dec4c3fe58.js","mappings":"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","sources":["webpack://skeleton-pip/./node_modules/react-loading-skeleton/dist/index.js","webpack://skeleton-pip/./src/pages/github/[md].tsx","webpack://skeleton-pip/./src/hooks/markdown.ts","webpack://skeleton-pip/./src/components/ParsedHTML/ParsedHTML.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/anchor/getAnchor.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/list/getList.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/alert/getAlert.tsx","webpack://skeleton-pip/./src/hooks/useMarkdownDirectories.ts","webpack://skeleton-pip/./src/hooks/htmlParser/useHtmlParser.ts","webpack://skeleton-pip/./src/hooks/htmlParser/paragraph/getParagraph.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/listItem/getListItem.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/image/getImage.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/getBlockquote/getBlockquote.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/alert/getAlert.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/table/getTable.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/table/getTable.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/tableRow/getTableRow.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/tableRow/getTableRow.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/tableHeader/getTableHeader.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/tableHeader/getTableHeader.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/tableHeaderCell/getTableHeaderCell.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/tableBody/getTableBody.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/tableBody/getTableBody.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/tableCell/getTableCell.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/tableCell/getTableCell.module.css","webpack://skeleton-pip/./src/hooks/htmlParser/svg/getSvg.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/code/getCode.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/list/getList.tsx","webpack://skeleton-pip/./src/hooks/htmlParser/header/getHeader.tsx","webpack://skeleton-pip/./src/services/isHtml.ts","webpack://skeleton-pip/./src/components/ParsedHTML/ParsedHTML.tsx","webpack://skeleton-pip/./src/templates/markdown/MarkdownContentTemplate.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\n\n/**\n * @internal\n */\nconst SkeletonThemeContext = React.createContext({});\n\n/* eslint-disable react/no-array-index-key */\nconst defaultEnableAnimation = true;\n// For performance & cleanliness, don't add any inline styles unless we have to\nfunction styleOptionsToCssProperties(_ref) {\n  let {\n    baseColor,\n    highlightColor,\n    width,\n    height,\n    borderRadius,\n    circle,\n    direction,\n    duration,\n    enableAnimation = defaultEnableAnimation\n  } = _ref;\n  const style = {};\n  if (direction === 'rtl') style['--animation-direction'] = 'reverse';\n  if (typeof duration === 'number') style['--animation-duration'] = `${duration}s`;\n  if (!enableAnimation) style['--pseudo-element-display'] = 'none';\n  if (typeof width === 'string' || typeof width === 'number') style.width = width;\n  if (typeof height === 'string' || typeof height === 'number') style.height = height;\n  if (typeof borderRadius === 'string' || typeof borderRadius === 'number') style.borderRadius = borderRadius;\n  if (circle) style.borderRadius = '50%';\n  if (typeof baseColor !== 'undefined') style['--base-color'] = baseColor;\n  if (typeof highlightColor !== 'undefined') style['--highlight-color'] = highlightColor;\n  return style;\n}\nfunction Skeleton(_ref2) {\n  let {\n    count = 1,\n    wrapper: Wrapper,\n    className: customClassName,\n    containerClassName,\n    containerTestId,\n    circle = false,\n    style: styleProp,\n    ...originalPropsStyleOptions\n  } = _ref2;\n  var _a, _b, _c;\n  const contextStyleOptions = React.useContext(SkeletonThemeContext);\n  const propsStyleOptions = {\n    ...originalPropsStyleOptions\n  };\n  // DO NOT overwrite style options from the context if `propsStyleOptions`\n  // has properties explicity set to undefined\n  for (const [key, value] of Object.entries(originalPropsStyleOptions)) {\n    if (typeof value === 'undefined') {\n      delete propsStyleOptions[key];\n    }\n  }\n  // Props take priority over context\n  const styleOptions = {\n    ...contextStyleOptions,\n    ...propsStyleOptions,\n    circle\n  };\n  // `styleProp` has the least priority out of everything\n  const style = {\n    ...styleProp,\n    ...styleOptionsToCssProperties(styleOptions)\n  };\n  let className = 'react-loading-skeleton';\n  if (customClassName) className += ` ${customClassName}`;\n  const inline = (_a = styleOptions.inline) !== null && _a !== void 0 ? _a : false;\n  const elements = [];\n  const countCeil = Math.ceil(count);\n  for (let i = 0; i < countCeil; i++) {\n    let thisStyle = style;\n    if (countCeil > count && i === countCeil - 1) {\n      // count is not an integer and we've reached the last iteration of\n      // the loop, so add a \"fractional\" skeleton.\n      //\n      // For example, if count is 3.5, we've already added 3 full\n      // skeletons, so now we add one more skeleton that is 0.5 times the\n      // original width.\n      const width = (_b = thisStyle.width) !== null && _b !== void 0 ? _b : '100%'; // 100% is the default since that's what's in the CSS\n      const fractionalPart = count % 1;\n      const fractionalWidth = typeof width === 'number' ? width * fractionalPart : `calc(${width} * ${fractionalPart})`;\n      thisStyle = {\n        ...thisStyle,\n        width: fractionalWidth\n      };\n    }\n    const skeletonSpan = React.createElement(\"span\", {\n      className: className,\n      style: thisStyle,\n      key: i\n    }, \"\\u200C\");\n    if (inline) {\n      elements.push(skeletonSpan);\n    } else {\n      // Without the <br />, the skeleton lines will all run together if\n      // `width` is specified\n      elements.push(React.createElement(React.Fragment, {\n        key: i\n      }, skeletonSpan, React.createElement(\"br\", null)));\n    }\n  }\n  return React.createElement(\"span\", {\n    className: containerClassName,\n    \"data-testid\": containerTestId,\n    \"aria-live\": \"polite\",\n    \"aria-busy\": (_c = styleOptions.enableAnimation) !== null && _c !== void 0 ? _c : defaultEnableAnimation\n  }, Wrapper ? elements.map((el, i) => React.createElement(Wrapper, {\n    key: i\n  }, el)) : elements);\n}\nfunction SkeletonTheme(_ref3) {\n  let {\n    children,\n    ...styleOptions\n  } = _ref3;\n  return React.createElement(SkeletonThemeContext.Provider, {\n    value: styleOptions\n  }, children);\n}\nexport { SkeletonTheme, Skeleton as default };","import * as React from \"react\";\nimport qs from \"qs\";\nimport { PageProps } from \"gatsby\";\nimport { MarkdownContentTemplate } from \"../../templates/markdown/MarkdownContentTemplate\";\nimport { useGatsbyContext } from \"../../context/gatsby\";\nimport { useTranslation } from \"react-i18next\";\nimport { Page, PageContent } from \"@utrecht/component-library-react/dist/css-module\";\n\nconst MarkdownPage: React.FC<PageProps> = (props: PageProps) => {\n  const { t } = useTranslation();\n  const { location } = useGatsbyContext();\n\n  const url = location.search;\n  const [, params] = url.split(\"?\");\n  const parsedParams = qs.parse(params);\n  const link = parsedParams.link?.toString();\n\n  const detailPageSlug = props.params.detailPageSlug;\n  const pageSlug = props.params.pageSlug;\n\n  if (!link) {\n    return <span>{t(\"No markdown file found, make sure that the query param link is filled\")}</span>;\n  }\n\n  return (\n    <Page>\n      <PageContent>\n        <MarkdownContentTemplate {...{ pageSlug, detailPageSlug, link }} />\n      </PageContent>\n    </Page>\n  );\n};\n\nexport default MarkdownPage;\n","import * as React from \"react\";\nimport { useQuery } from \"react-query\";\nimport APIService from \"../apiService/apiService\";\nimport APIContext from \"../apiService/apiContext\";\n\nexport const useMarkdown = () => {\n  const API: APIService | null = React.useContext(APIContext);\n\n  const getContent = (filePath: string) =>\n    useQuery<any, Error>({\n      queryKey: [\"contents\", filePath],\n      queryFn: () => API?.Markdown.getContent(filePath),\n      onError: (error) => {\n        console.warn(error.message);\n      },\n      refetchOnWindowFocus: false,\n      refetchOnMount: false,\n      refetchOnReconnect: false,\n      retry: 1,\n      retryDelay: 2000,\n      staleTime: 1000 * 60 * 60, // one hour\n    });\n\n  return { getContent };\n};\n","// extracted by mini-css-extract-plugin\nexport var container = \"ParsedHTML-module--container--4efc0\";","import * as React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Link } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { navigate } from \"gatsby\";\r\nimport { domToReact } from \"html-react-parser\";\r\nimport { TGitHubDirectory } from \"../../useGitHubDirectories\";\r\n\r\nexport const getAnchor = (\r\n  props: any,\r\n  children: any,\r\n  options: any,\r\n  directories: TGitHubDirectory[],\r\n  location: string,\r\n) => {\r\n  const conditions = [\"://\", \"tel:\", \"mailto:\"];\r\n  const handleClick = (e: any) => {\r\n    e.preventDefault();\r\n\r\n    const targetFile = _.upperFirst(props.href.substring(props.href.lastIndexOf(\"/\") + 1).replace(\".md\", \"\"));\r\n\r\n    // No link\r\n    if (!props.href) {\r\n      navigate(\"#\");\r\n\r\n      return;\r\n    }\r\n\r\n    // Anchor Links\r\n    if (props.className === \"anchor\" || Array.from(props.href)[0] === \"#\") {\r\n      handleAnchorClick(props); // handles on-page scroll anchors\r\n\r\n      return;\r\n    }\r\n\r\n    // Internal Links\r\n    if (!conditions.some((substring) => props.href.includes(substring))) {\r\n      handleInternalLinks(props, targetFile, location, directories);\r\n\r\n      return;\r\n    }\r\n\r\n    // External Links\r\n    if (conditions.some((substring) => props.href.includes(substring))) {\r\n      open(props.href);\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  const attributes = {\r\n    ...props,\r\n    onClick: handleClick,\r\n  };\r\n\r\n  return <Link {...attributes}>{domToReact(children, options)}</Link>;\r\n};\r\n\r\nconst handleInternalLinks = (props: any, targetFile: string, location: string, directories: TGitHubDirectory[]) => {\r\n  // Internal Links: same directory\r\n  if (!props.href.includes(\"/\")) {\r\n    const targetDirectory = _.upperFirst(location.split(\"/\").reverse()[1]);\r\n    navigate(`/pages/${targetDirectory}/${targetFile}`);\r\n\r\n    return; // ensure no other flow is triggered\r\n  }\r\n\r\n  // Internal Links: homepage\r\n  if (props.href.includes(\"/\") && location === \"/\") {\r\n    const directoryFound = directories.some((directory) => directory.location === props.href);\r\n\r\n    if (directoryFound) navigate(`/pages/${targetFile}`);\r\n\r\n    return; // ensure no other flow is triggered\r\n  }\r\n\r\n  // Internal Links: different directory\r\n  if (props.href.includes(\"/\")) {\r\n    const targetDirectory = props.href.split(\"/\").reverse()[1];\r\n    const directoryFound = directories.some(\r\n      (directory) => directory.location.substring(directory.location.lastIndexOf(\"/\") + 1) === targetDirectory,\r\n    );\r\n\r\n    // Internal Link exists: redirect to page\r\n    if (directoryFound) {\r\n      navigate(`/pages/${_.upperFirst(targetDirectory)}/${targetFile}`);\r\n    }\r\n\r\n    // Internal Link does not exist: redirect to online GitHub environment (TODO)\r\n    if (!directoryFound) {\r\n      const hrefWithLeadingSlash = !props.href.startsWith(\"/\") ? `/${props.href}` : props.href;\r\n\r\n      open(`${process.env.GATSBY_GITHUB_REPOSITORY_URL}/blob/master${hrefWithLeadingSlash}`);\r\n    }\r\n\r\n    return; // ensure no other flow is triggered\r\n  }\r\n};\r\n\r\nconst handleAnchorClick = (props: any) => {\r\n  const targetId = props.id ?? props.href.replace(\"#\", \"user-content-\");\r\n\r\n  const target = document.getElementById(targetId);\r\n  const headerHeight = document.getElementById(\"header\")?.clientHeight ?? 100;\r\n\r\n  if (target) {\r\n    window.scrollTo({ top: target.offsetTop - (headerHeight + 24), behavior: \"smooth\" }); // +24 simply adds some padding\r\n  }\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var list = \"getList-module--list--5f814\";","import * as styles from \"./getAlert.module.css\";\r\nimport { Alert } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getAlert = (children: any, options: any, type: any) => {\r\n  switch (true) {\r\n    case type.includes(\"note\") || type.includes(\"info\"):\r\n      return (\r\n        <Alert className={styles.info} type=\"info\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"error\"):\r\n      return (\r\n        <Alert className={styles.error} type=\"error\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"warning\"):\r\n      return (\r\n        <Alert className={styles.warning} type=\"warning\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    case type.includes(\"succes\") || type.includes(\"ok\"):\r\n      return (\r\n        <Alert className={styles.ok} type=\"ok\">\r\n          {domToReact(children, options)}\r\n        </Alert>\r\n      );\r\n    default:\r\n      return <Alert type=\"info\">{domToReact(children, options)}</Alert>;\r\n  }\r\n};\r\n","import * as React from \"react\";\n\nexport type TMarkdownDirectory = {\n  name: string;\n  location: string;\n};\n\nexport const useMarkdownDirectories = () => {\n  const [directories, setDirectories] = React.useState<TMarkdownDirectory[]>([]);\n\n  React.useEffect(() => {\n    const markdownDirectoryPathsString: string | undefined = process.env.GATSBY_GITHUB_DOCS_DIRECTORY_PATHS;\n\n    if (!markdownDirectoryPathsString) return;\n\n    try {\n      const directories = JSON.parse(markdownDirectoryPathsString);\n\n      setDirectories(directories);\n    } catch {\n      console.warn(\"Something went wrong parsing the Markdown directories.\");\n    }\n  }, []);\n\n  const getSlugFromName = (name: string): string => name?.replace(\" \", \"-\");\n  const getNameFromSlug = (slug: string): string => slug?.replace(\"-\", \" \"); // internal function\n\n  const getDirectoryReadMeLocation = (pageSlug: string): string => {\n    const directory = directories.find((directory) => directory.name === getNameFromSlug(pageSlug));\n\n    if (!directory) return \"\";\n\n    return `${directory.location}/README.md`;\n  };\n\n  const getDetailMdLocation = (pageSlug: string, detailPageSlug: string): string => {\n    const directory = directories.find((directory) => directory.name === getNameFromSlug(pageSlug));\n\n    if (!directory) return \"\";\n\n    return `${directory.location}/${getNameFromSlug(detailPageSlug)}.md`;\n  };\n\n  return { directories, getSlugFromName, getDirectoryReadMeLocation, getDetailMdLocation };\n};\n","import { attributesToProps } from \"html-react-parser\";\nimport { getHeader } from \"./header/getHeader\";\nimport { getAnchor } from \"./anchor/getAnchor\";\nimport { getListItem } from \"./listItem/getListItem\";\nimport { getImage } from \"./image/getImage\";\nimport { getList } from \"./list/getList\";\nimport { getParagraph } from \"./paragraph/getParagraph\";\nimport { getBlockquote } from \"./getBlockquote/getBlockquote\";\nimport { getTable } from \"./table/getTable\";\nimport { getTableRow } from \"./tableRow/getTableRow\";\nimport { getTableHeader } from \"./tableHeader/getTableHeader\";\nimport { getTableHeaderCell } from \"./tableHeaderCell/getTableHeaderCell\";\nimport { getTableBody } from \"./tableBody/getTableBody\";\nimport { getTableCell } from \"./tableCell/getTableCell\";\nimport { getCode } from \"./code/getCode\";\nimport { getAlert } from \"./alert/getAlert\";\nimport { useMarkdownDirectories } from \"../useMarkdownDirectories\";\nimport { getSvg } from \"./svg/getSvg\";\n\nexport const useHtmlParser = (location: string) => {\n  const { directories } = useMarkdownDirectories();\n\n  const options = {\n    replace: ({ attribs, parent, children, name }: any) => {\n      if (!attribs) {\n        return;\n      }\n\n      const props = attributesToProps(attribs);\n\n      if (attribs && (name === \"h1\" || name === \"h2\" || name === \"h3\" || name === \"h4\")) {\n        return getHeader(name, props, children, options);\n      }\n\n      if (attribs && name === \"p\") {\n        return getParagraph(props, children, options);\n      }\n\n      if (attribs && name === \"a\") {\n        return getAnchor(props, children, options, directories, location);\n      }\n\n      if (attribs && (name === \"ol\" || name === \"ul\")) {\n        return getList(name, props, children, options);\n      }\n\n      if (attribs && name === \"li\") {\n        return getListItem(props, parent, children, options);\n      }\n\n      if (attribs && name === \"img\") {\n        return getImage(props);\n      }\n\n      if (attribs && name === \"blockquote\") {\n        return getBlockquote(children, options);\n      }\n\n      if (attribs && name === \"div\" && attribs.class?.includes(\"markdown-alert\")) {\n        return getAlert(children, options, attribs.class);\n      }\n\n      if (attribs && name === \"table\") {\n        return getTable(props, children, options);\n      }\n\n      if (attribs && name === \"tr\") {\n        return getTableRow(props, children, options);\n      }\n\n      if (attribs && name === \"thead\") {\n        return getTableHeader(props, children, options);\n      }\n\n      if (attribs && name === \"th\") {\n        return getTableHeaderCell(props, children, options);\n      }\n\n      if (attribs && name === \"tbody\") {\n        return getTableBody(props, children, options);\n      }\n\n      if (attribs && name === \"td\") {\n        return getTableCell(props, children, options);\n      }\n\n      if (attribs && name === \"svg\") {\n        return getSvg(props, children, options);\n      }\n\n      if (attribs && (name === \"code\" || name === \"pre\")) {\n        return getCode(name, props, children, options);\n      }\n    },\n  };\n\n  return { options };\n};\n","import { Paragraph } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getParagraph = (props: any, children: any, options: any) => {\r\n  return <Paragraph {...props}>{domToReact(children, options)}</Paragraph>;\r\n};\r\n","import { OrderedListItem, UnorderedListItem } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getListItem = (props: any, parent: any, children: any, options: any) => {\r\n  switch (parent.name) {\r\n    case \"ol\":\r\n      return <OrderedListItem {...props}>{domToReact(children, options)}</OrderedListItem>;\r\n    case \"ul\":\r\n      return <UnorderedListItem {...props}>{domToReact(children, options)}</UnorderedListItem>;\r\n  }\r\n\r\n  return;\r\n};\r\n","import { Image } from \"@utrecht/component-library-react/dist/css-module\";\r\n\r\nexport const getImage = (props: any) => {\r\n  let src = props.src;\r\n\r\n  if (!props.src.includes(\"https://\" || \"http://\")) {\r\n    const sessionUrl = process.env.GATSBY_GITHUB_REPOSITORY_URL;\r\n    const url = sessionUrl?.replace(\"https://github.com/\", \"\");\r\n\r\n    src = `https://raw.githubusercontent.com/${url}/master/docs/features/${props.src}`;\r\n  }\r\n\r\n  let alt = props.alt;\r\n  if (!props.alt) {\r\n    alt = props.title;\r\n  }\r\n  if (!props.alt && !props.title) {\r\n    alt = props.src;\r\n  }\r\n\r\n  const attributes = {\r\n    ...props,\r\n    src,\r\n    alt,\r\n    href: \"\",\r\n    onClick: (e: MouseEvent) => {\r\n      e.stopPropagation();\r\n      open(src);\r\n    },\r\n  };\r\n  return <Image {...attributes} />;\r\n};\r\n","import { Alert } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getBlockquote = (children: any, options: any) => {\r\n  return <Alert>{domToReact(children, options)}</Alert>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var error = \"getAlert-module--error--a7ff3\";\nexport var info = \"getAlert-module--info--6faee\";\nexport var ok = \"getAlert-module--ok--75642\";\nexport var warning = \"getAlert-module--warning--16e7a\";","import * as styles from \"./getTable.module.css\";\r\nimport { Table } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTable = (props: any, children: any, options: any) => {\r\n  return (\r\n    <Table className={styles.table} {...props}>\r\n      {domToReact(children, options)}\r\n    </Table>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var table = \"getTable-module--table--b07c6\";","import * as styles from \"./getTableRow.module.css\";\r\nimport { TableRow } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableRow = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableRow className={styles.tableRow} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableRow>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableRow = \"getTableRow-module--tableRow--43fa5\";","import * as styles from \"./getTableHeader.module.css\";\r\nimport { TableHeader } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableHeader = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableHeader className={styles.tableHeader} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableHeader>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableHeader = \"getTableHeader-module--tableHeader--94fa3\";","import { TableHeaderCell } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableHeaderCell = (props: any, children: any, options: any) => {\r\n  return <TableHeaderCell {...props}>{domToReact(children, options)}</TableHeaderCell>;\r\n};\r\n","import * as styles from \"./getTableBody.module.css\";\r\nimport { TableBody } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableBody = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableBody className={styles.tableBody} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableBody>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableBody = \"getTableBody-module--tableBody--7e02c\";","import * as styles from \"./getTableCell.module.css\";\r\nimport { TableCell } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getTableCell = (props: any, children: any, options: any) => {\r\n  return (\r\n    <TableCell className={styles.tableCell} {...props}>\r\n      {domToReact(children, options)}\r\n    </TableCell>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport var tableCell = \"getTableCell-module--tableCell--c1c5e\";","import { domToReact } from \"html-react-parser\";\r\n\r\nexport const getSvg = (props: any, children: any, options: any) => {\r\n  if (props.className.includes(\"octicon octicon-link\")) {\r\n    return <></>;\r\n  }\r\n\r\n  return <svg {...props}>{domToReact(children, options)}</svg>;\r\n};\r\n","import { Code, CodeBlock } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getCode = (name: string, props: any, children: any, options: any) => {\r\n  switch (name) {\r\n    case \"code\":\r\n      return <Code {...props}>{domToReact(children, options)}</Code>;\r\n    case \"pre\":\r\n      return <CodeBlock {...props}>{domToReact(children, options)}</CodeBlock>;\r\n  }\r\n};\r\n","import * as styles from \"./getList.module.css\";\r\nimport { OrderedList, UnorderedList } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getList = (name: string, props: any, children: any, options: any) => {\r\n  switch (name) {\r\n    case \"ol\":\r\n      return (\r\n        <OrderedList className={styles.list} {...props}>\r\n          {domToReact(children, options)}\r\n        </OrderedList>\r\n      );\r\n    case \"ul\":\r\n      return (\r\n        <UnorderedList className={styles.list} {...props}>\r\n          {domToReact(children, options)}\r\n        </UnorderedList>\r\n      );\r\n  }\r\n};\r\n","import { Heading1, Heading2, Heading3, Heading4 } from \"@utrecht/component-library-react/dist/css-module\";\r\nimport { domToReact } from \"html-react-parser\";\r\n\r\nexport const getHeader = (name: string, props: any, children: any, options: any) => {\r\n  switch (name) {\r\n    case \"h1\":\r\n      return <Heading1 {...props}>{domToReact(children, options)}</Heading1>;\r\n    case \"h2\":\r\n      return <Heading2 {...props}>{domToReact(children, options)}</Heading2>;\r\n    case \"h3\":\r\n      return <Heading3 {...props}>{domToReact(children, options)}</Heading3>;\r\n    case \"h4\":\r\n      return <Heading4 {...props}>{domToReact(children, options)}</Heading4>;\r\n  }\r\n};\r\n","//This function checks if the string contains HTML code\r\nexport const isHtml = (data: string): boolean => {\r\n  const hmlRegex = /<([A-Za-z][A-Za-z0-9]*)\\b[^>]*>(.*?)<\\/\\1>/;\r\n\r\n  return hmlRegex.test(data);\r\n};\r\n","import * as React from \"react\";\nimport * as styles from \"./ParsedHTML.module.css\";\nimport Parser from \"html-react-parser\";\nimport Skeleton from \"react-loading-skeleton\";\nimport clsx from \"clsx\";\nimport showdown from \"showdown\";\nimport { Alert } from \"@utrecht/component-library-react/dist/css-module\";\nimport { UseQueryResult } from \"react-query\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faWarning } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHtmlParser } from \"../../hooks/htmlParser/useHtmlParser\";\nimport { isHtml } from \"../../services/isHtml\";\n\ninterface ParsedHTMLProps {\n  contentQuery: UseQueryResult<any, Error>;\n  location: string;\n  layoutClassName?: string;\n}\n\nexport const ParsedHTML: React.FC<ParsedHTMLProps> = ({ contentQuery, location, layoutClassName }) => {\n  const { options } = useHtmlParser(location);\n  let htmlContent;\n\n  showdown.setFlavor(\"github\");\n\n  if (!isHtml(contentQuery.data)) {\n    const converter = new showdown.Converter();\n    htmlContent = `<div><article class=\"markdown-body entry-content container-lg\" itemprop=\"text\">${converter.makeHtml(\n      contentQuery.data,\n    )}</article></div>`;\n  }\n  if (isHtml(contentQuery.data)) {\n    htmlContent = contentQuery.data;\n  }\n\n  if (contentQuery.isLoading)\n    return (\n      <div className={styles.container}>\n        <Skeleton height=\"200px\" />\n      </div>\n    );\n\n  if (contentQuery.isError)\n    return (\n      <div className={styles.container}>\n        <Alert icon={<FontAwesomeIcon icon={faWarning} />} type=\"error\">\n          Oops, something went wrong retrieving the .md file from GitHub.\n        </Alert>\n      </div>\n    );\n\n  return (\n    <div className={clsx(styles.container, layoutClassName && layoutClassName)}>{Parser(htmlContent, options)}</div>\n  );\n};\n","import * as React from \"react\";\r\nimport { useMarkdown } from \"../../hooks/markdown\";\r\nimport { ParsedHTML } from \"../../components/ParsedHTML/ParsedHTML\";\r\nimport { useMarkdownDirectories } from \"../../hooks/useMarkdownDirectories\";\r\n\r\ninterface MarkdownContentTemplateProps {\r\n  pageSlug: string;\r\n  detailPageSlug: string;\r\n  link: string;\r\n}\r\n\r\nexport const MarkdownContentTemplate: React.FC<MarkdownContentTemplateProps> = ({ pageSlug, detailPageSlug, link }) => {\r\n  const { getDetailMdLocation } = useMarkdownDirectories();\r\n\r\n  const location = getDetailMdLocation(pageSlug, detailPageSlug);\r\n\r\n  let content: any;\r\n\r\n  if (link.includes(\"https://github.com/\")) {\r\n    const linkHttps = link.replace(\"https://github.com/\", \"https://api.github.com/repos/\");\r\n    linkHttps.includes(\"/blob/main/\")\r\n      ? (content = useMarkdown().getContent(linkHttps.replace(\"/blob/main/\", \"/contents/\")))\r\n      : (content = useMarkdown().getContent(linkHttps.replace(\"/blob/master/\", \"/contents/\")));\r\n  } else {\r\n    content = useMarkdown().getContent(link.includes(\"https://api.github.com/repos/\") ? link : link);\r\n  }\r\n\r\n  return <ParsedHTML contentQuery={content} {...{ location }} />;\r\n};\r\n"],"names":["SkeletonThemeContext","defaultEnableAnimation","styleOptionsToCssProperties","_ref","baseColor","highlightColor","width","height","borderRadius","circle","direction","duration","enableAnimation","style","Skeleton","_ref2","count","wrapper","Wrapper","className","customClassName","containerClassName","containerTestId","styleProp","originalPropsStyleOptions","_a","_b","_c","contextStyleOptions","propsStyleOptions","key","value","Object","entries","styleOptions","inline","elements","countCeil","Math","ceil","i","thisStyle","fractionalPart","fractionalWidth","skeletonSpan","push","map","el","props","_parsedParams$link","t","useTranslation","location","useGatsbyContext","url","search","params","split","link","qs","toString","detailPageSlug","pageSlug","_jsx","Page","children","PageContent","MarkdownContentTemplate","useMarkdown","API","React","APIContext","getContent","filePath","useQuery","queryKey","queryFn","Markdown","onError","error","console","warn","message","refetchOnWindowFocus","refetchOnMount","refetchOnReconnect","retry","retryDelay","staleTime","container","handleInternalLinks","targetFile","directories","href","includes","some","directory","navigate","targetDirectory","reverse","directoryFound","substring","lastIndexOf","_upperFirst","hrefWithLeadingSlash","startsWith","open","process","GATSBY_GITHUB_REPOSITORY_URL","handleAnchorClick","_props$id","_document$getElementB","_document$getElementB2","targetId","id","replace","target","document","getElementById","headerHeight","clientHeight","window","scrollTo","top","offsetTop","behavior","list","useMarkdownDirectories","setDirectories","markdownDirectoryPathsString","GATSBY_GITHUB_DOCS_DIRECTORY_PATHS","JSON","parse","getNameFromSlug","slug","getSlugFromName","name","getDirectoryReadMeLocation","find","getDetailMdLocation","useHtmlParser","options","_attribs$class","attribs","parent","attributesToProps","getParagraph","Paragraph","domToReact","getAnchor","conditions","attributes","onClick","e","preventDefault","Array","from","Link","getListItem","OrderedListItem","UnorderedListItem","src","sessionUrl","alt","title","stopPropagation","Image","getImage","getBlockquote","Alert","class","getAlert","type","getTable","Table","getTableRow","TableRow","getTableHeader","TableHeader","getTableHeaderCell","TableHeaderCell","getTableBody","TableBody","getTableCell","TableCell","getSvg","_Fragment","getCode","Code","CodeBlock","getList","OrderedList","styles","UnorderedList","getHeader","Heading1","Heading2","Heading3","Heading4","isHtml","data","test","ParsedHTML","contentQuery","layoutClassName","htmlContent","showdown","makeHtml","isLoading","isError","icon","FontAwesomeIcon","faWarning","clsx","Parser","content","linkHttps"],"sourceRoot":""}